# development
option(WITH_COVERAGE  "Build with coverage and profiling flags" OFF)
option(WITH_BENCHMARK "Build with benchmarks" ON)
option(WITH_CLANG_TIDY "Build with clang-tidy checks" OFF)

# externals
option(WITH_ARTNET "Build with artnet" ON)
option(WITH_EXT_AUTOTUNE "Build autotune external" ON)
option(WITH_EXT_FFTEASE "Build FFTease externals" OFF)
option(WITH_EXT_FLEXT "Build flext externals" ON)
option(WITH_EXT_LYONPOTPOURRI "Build lyonpotpourri externals" OFF)
option(WITH_FAUST "Build faust externals" ON)
option(WITH_FFTW "Use fftw3 library (http://www.fftw.org/)" ON)
option(WITH_FLEXT_VASP "Build flext varsp externals" OFF)
option(WITH_FLUIDSYNTH "Build with FluidSynth support" ON)
option(WITH_FREESOUND "Build with FreeSound" ON)
option(WITH_GAMEPAD  "Build with gamepad client support" ON)
option(WITH_HTTP  "Build with http client support" ON)
option(WITH_LIBSAMPLERATE "Build with libsamplerate" OFF)
option(WITH_LTC "Build with libltc" ON)
option(WITH_LUAJIT "Build luajit externals" ON)
option(WITH_MODPLUG "Build with libmodplug support" ON)
option(WITH_MQTT  "Build with MQTT client support" ON)
option(WITH_OBS "Build with OBS Studio control support" ON)
option(WITH_PD_INSTANCE "Build with PD_INSTANCE" OFF)
option(WITH_PRINTER  "Build with printer support" ON)
option(WITH_RUST_APPS  "Build rust command line applications" ON)
option(WITH_SFIZZ      "Build with Sfizz support" ON)
option(WITH_SYSTEM_CMD "Build system.cmd object" ON)
option(WITH_SYSTEM_INFO "Build system.info object" ON)
option(WITH_TELEGRAM   "Build with telegram bot support" ON)
option(WITH_TTS_FLITE    "Build with Flite TTS support" ON)
option(WITH_TTS_RHVOICE  "Build with RHVoice TTS support" OFF)
option(WITH_VEROVIO  "Build with Verovio music notation render" ON)
option(WITH_WEBSOCKET  "Build with websocket client support" ON)
option(WITH_ZEROCONF "Build with MDNS-SD (zeroconf) support" ON)


if(UNIX)
    option(WITH_ASAN "Build with address sanitizer" OFF)
    option(WITH_PROFILE "Build with gprof support" OFF)
endif()

if(APPLE)
    set(WISH_VERSION "8.6.12" CACHE STRING "Wish Tk version")
endif()

option(ENABLE_TESTS "Enable tests" ON)

if(CMAKE_VERSION VERSION_LESS "3.22.0")
    message("Please consider to switch to CMake 3.8.0")
    option(WITH_RUST_CORE "Use rust core module" ON)
    option(WITH_RUST_HW "Use rust hw module" ON)
    option(WITH_RUST_NET "Use rust net module" ON)
    option(WITH_RUST_PROTO "Use rust proto module" ON)
    option(WITH_RUST_SYSTEM "Use rust system module" ON)
else()
    include(CMakeDependentOption)
    cmake_dependent_option(WITH_RUST_CORE "Use rust core module" ON "WITH_ZEROCONF" OFF)
    cmake_dependent_option(WITH_RUST_HW "Use rust hardware module" ON "WITH_GAMEPAD OR WITH_PRINTER" OFF)
    cmake_dependent_option(WITH_RUST_NET "Use rust net module" ON "WITH_MQTT OR WITH_HTTP OR WITH_FREESOUND OR WITH_TELEGRAM OR WITH_WEBSOCKET" OFF)
    cmake_dependent_option(WITH_RUST_PROTO "Use rust proto module" ON "WITH_OBS" OFF)
    cmake_dependent_option(WITH_RUST_SYSTEM "Use rust system module" ON "WITH_SYSTEM_CMD OR WITH_SYSTEM_INFO" OFF)
endif()



