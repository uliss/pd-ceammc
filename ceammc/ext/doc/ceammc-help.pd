#N canvas 0 0 600 500 12;
#X text 30 50 General purpose Pd library used for work and education
purposes in centre of electroacoustic music of Moscow Convervatory
(CEAMMC) and ZIL-electro studio\. ;
#X obj 20 101 cnv 5 28 19 empty empty dyn 0 17 0 17 -262144 -49933 0;
#X obj 20 130 cnv 1 576 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 30 141 dyn.comp2~;
#X text 150 141 stereo dynamic range compressor;
#X obj 30 168 dyn.comp~;
#X text 150 168 mono dynamic range compressors;
#X obj 30 195 dyn.gate2~;
#X text 150 195 stereo signal gate;
#X obj 30 222 dyn.gate~;
#X text 150 222 mono signal gate;
#X obj 30 249 dyn.limit2~;
#X text 150 249 stereo 1176LN Peak Limiter;
#X obj 30 276 dyn.limit~;
#X text 150 276 mono 1176LN Peak Limiter;
#X obj 20 303 cnv 5 28 19 empty empty env 0 17 0 17 -262144 -49933 0;
#X obj 20 332 cnv 1 576 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 30 343 env.adsr~;
#X text 150 343 ADSR (Attack \, Decay \, Sustain \, Release) envelope
generator;
#X obj 30 370 env.ar~;
#X text 150 370 AR (Attack \, Release) envelope generator (useful to
create percussion envelopes)\.;
#X obj 20 407 cnv 5 27 19 empty empty flt 0 17 0 17 -262144 -49933 0;
#X obj 20 436 cnv 1 576 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 30 447 flt.dcblock2~;
#X text 150 447 stereo DC blocker;
#X obj 30 474 flt.dcblock~;
#X text 150 474 mono DC blocker;
#X obj 30 501 flt.eq_peak~;
#X text 150 501 second order "peaking equalizer" section (gain boost
or cut near some frequency)\.  Also called a "parametric equalizer"
section\.;
#X obj 30 552 flt.highshelf~;
#X text 150 552 gain boost|cut above some frequency;
#X obj 30 579 flt.lowshelf~;
#X text 150 579 gain boost|cut below some frequency;
#X obj 20 606 cnv 5 18 19 empty empty fx 0 17 0 17 -262144 -49933 0;
#X obj 20 635 cnv 1 576 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 30 646 fx.softclip~;
#X text 150 646 soft signal clip;
#X obj 20 673 cnv 5 27 19 empty empty lfo 0 17 0 17 -262144 -49933 0;
#X obj 20 702 cnv 1 576 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 30 713 lfo.impulse~;
#X text 150 713 Unit-amplitude low-frequency impulse train;
#X obj 30 740 lfo.square~;
#X text 150 740 Positive low frequence square wave;
#X obj 30 767 lfo.tri~;
#X text 150 767 Positive unit-amplitude low frequency triangle wave;
#X obj 20 794 cnv 5 37 19 empty empty list 0 17 0 17 -262144 -49933 0;
#X obj 20 823 cnv 1 576 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 30 834 list.apply_to;
#X text 150 834 modifies list value at specified position \, filtering
it via external object\.;
#X obj 30 871 list.sort;
#X text 150 871 sorts list values by ascending order;
#X obj 20 898 cnv 5 38 19 empty empty live 0 17 0 17 -262144 -49933 0;
#X obj 20 927 cnv 1 576 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 30 938 live.capture~;
#X text 150 938 record up to 8s of sound and playback the recorded
sound in loop;
#X obj 20 975 cnv 5 38 19 empty empty math 0 17 0 17 -262144 -49933 0;
#X obj 20 1004 cnv 1 576 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 30 1015 math.abs;
#X text 150 1015 absolute value function;
#X obj 30 1042 math.acos;
#X text 150 1042 arc cosine function;
#X obj 30 1069 math.acosh;
#X text 150 1069 inverse hyperbolic cosine function;
#X obj 30 1096 math.asin;
#X text 150 1096 arc sine function;
#X obj 30 1123 math.asinh;
#X text 150 1123 inverse hyperbolic sine function;
#X obj 30 1150 math.atan;
#X text 150 1150 arc tangent function;
#X obj 30 1177 math.atanh;
#X text 150 1177 inverse hyperbolic tangent function;
#X obj 30 1204 math.cbrt;
#X text 150 1204 cube root function;
#X obj 30 1231 math.ceil;
#X text 150 1231 round to smallest integral value not less than input
value;
#X obj 30 1258 math.cos;
#X text 150 1258 cosine function;
#X obj 30 1285 math.cosh;
#X text 150 1285 hyperbolic cosine function;
#X obj 30 1312 math.e;
#X text 150 1312 mathematical constant \, base of the natural
logarithm;
#X obj 30 1339 math.exp;
#X text 150 1339 exponential functions;
#X obj 30 1366 math.exp2;
#X text 150 1366 exponential functions;
#X obj 30 1393 math.floor;
#X text 150 1393 round to largest integral value not greater than x;
#X obj 30 1420 math.inf;
#X text 150 1420 infinity value that cannot be represented accurately;
#X obj 30 1447 math.log;
#X text 150 1447 logarithm functions;
#X obj 30 1474 math.log10;
#X text 150 1474 logarithm functions;
#X obj 30 1501 math.log2;
#X text 150 1501 logarithm functions;
#X obj 30 1528 math.nan;
#X text 150 1528 Not a Number \, unrepresentable value;
#X obj 30 1555 math.pi;
#X text 150 1555 mathematical constant;
#X obj 30 1582 math.round;
#X text 150 1582 round to integral value \, regardless of rounding
direction;
#X obj 30 1609 math.sin;
#X text 150 1609 sine function;
#X obj 30 1636 math.sinh;
#X text 150 1636 hyperbolic sine function;
#X obj 30 1663 math.sqrt;
#X text 150 1663 square root function;
#X obj 30 1690 math.tan;
#X text 150 1690 tangent function;
#X obj 30 1717 math.tanh;
#X text 150 1717 hyperbolic tangent function;
#X obj 30 1744 math.trunc;
#X text 150 1744 truncate to integer value;
#X obj 20 1771 cnv 5 28 19 empty empty osc 0 17 0 17 -262144 -49933 0;
#X obj 20 1800 cnv 1 576 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 30 1811 osc.impulse~;
#X text 150 1811 Bandlimited impulse train generator;
#X obj 30 1838 osc.pulse~;
#X text 150 1838 Bandlimited pulse train oscillator\. ;
#X obj 30 1865 osc.saw~;
#X text 150 1865 Bandlimited saw wave oscillator;
#X obj 30 1892 osc.sinfb~;
#X text 150 1892 sine oscilator with feedback;
#X obj 30 1919 osc.square~;
#X text 150 1919 Bandlimited square wave oscillator;
#X obj 30 1946 osc.tri~;
#X text 150 1946 Bandlimited triangle wave oscillator;
#X obj 20 1973 cnv 5 99 19 empty empty predicates 0 17 0 17 -262144
-49933 0;
#X obj 20 2002 cnv 1 576 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 30 2013 is_any;
#X text 150 2013 checks if input data has *any* type;
#X obj 30 2040 is_bang;
#X text 150 2040 checks if input data has *bang* type;
#X obj 30 2067 is_even;
#X text 150 2067 checks if input number is even;
#X obj 30 2094 is_float;
#X text 150 2094 checks if input data has *float* type;
#X obj 30 2121 is_list;
#X text 150 2121 checks if input data has *list* type;
#X obj 30 2148 is_odd;
#X text 150 2148 checks if input number is odd;
#X obj 30 2175 is_pointer;
#X text 150 2175 checks if input data has *pointer* type;
#X obj 30 2202 is_symbol;
#X text 150 2202 checks if input data has *symbol* type;
#X obj 20 2229 cnv 5 58 19 empty empty system 0 17 0 17 -262144 -49933
0;
#X obj 20 2258 cnv 1 576 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 30 2269 system.memsize;
#X text 150 2269 returns the size of physical memory (RAM) in bytes
round to float data type\.;
#X obj 30 2306 system.memused;
#X text 150 2306 returns the process physical memory use - current and
peak;
#X obj 1 1 cnv 5 597 40 empty empty ceammc 20 20 0 20 -104026 -4096 0;
#X obj 1 2333 cnv 5 597 40 empty empty empty 17 7 0 10 -203890 -1 0;
#X text 20 2333 version: v0\.1 \, license: GPL3;
#X obj 20 2349 pddp/pddplink https://github.com/uliss/pure-data -text
https://github.com/uliss/pure-data;