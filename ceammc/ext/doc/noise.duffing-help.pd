#N canvas 0 0 785 555 12;
#X declare -lib ceammc;
#X obj 583 50 cnv 1 182 23 empty empty empty 17 7 0 10 -245760 -1 0;
#X text 583 50 Part of a-chaos library;
#X obj 1 1 cnv 5 765 40 empty empty noise.duffing 20 20 0 20 -104026
-4096 0;
#X obj 646 11 noise.duffing;
#X obj 210 80 cnv 1 555 325 empty empty empty 17 7 0 10 -257983 -1 0;
#X text 215 80 Duffing Attractor;
#X text 215 105 Written by Paul Bourke;
#X text 215 130 March 1998;
#X text 215 155 ---;
#X text 215 180 The solution to the Duffing equations is often used
as an example of a classic chaotic system.;
#X text 215 220 The Duffing system of differential equations is:;
#X text 215 245 ===========;
#X text 215 270 dx / dt = y;
#X text 215 295 dy / dt = x - x3 - a y + b cos(w t);
#X text 215 320 ===================================;
#X text 215 345 where typically \, a = 0.25 \, b = 0.3 \, w = 1;
#X text 215 370 The following shows a "typical" segment of (x \, y)
values.;
#X obj 50 448 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0 1;
#X obj 50 477 metro 50;
#X obj 69 505 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0 1;
#X floatatom 184 505 5 0 0 0 - - -;
#X msg 69 534 om \$1;
#X msg 184 534 set \$1;
#X msg 318 534 reset;
#X floatatom 88 563 5 0 0 0 - - -;
#X floatatom 184 563 5 0 0 0 - - -;
#X floatatom 280 563 5 0 0 0 - - -;
#X floatatom 376 563 5 0 0 0 - - -;
#X msg 88 592 a \$1;
#X msg 184 592 b \$1;
#X msg 280 592 w \$1;
#X msg 376 592 dt \$1;
#X obj 50 620 noise.duffing;
#X obj 50 649 ui.display;
#X obj 20 683 cnv 1 745 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 688 cnv 5 90 26 empty empty arguments: 4 10 0 14 -262144
-49933 0;
#X text 110 723 1\.;
#X text 150 723 float;
#X obj 246 724 cnv 1 40 20 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 245 723 ARG0: a value (default 0.25) \, optional.;
#X text 110 743 2\.;
#X text 150 743 float;
#X obj 246 744 cnv 1 40 20 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 245 743 ARG1: b value (default 0.3) \, optional.;
#X text 110 763 3\.;
#X text 150 763 float;
#X obj 246 764 cnv 1 40 20 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 245 763 ARG2: w value (default 1.0) \, optional.;
#X text 110 783 4\.;
#X text 150 783 float;
#X obj 246 784 cnv 1 40 20 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 245 783 ARG3: dt value (default 0.01) \, optional.;
#X obj 20 813 cnv 1 745 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 818 cnv 5 73 26 empty empty methods: 4 10 0 14 -262144
-49933 0;
#X msg 110 853 a;
#X text 245 853 Arguments are:;
#X obj 255 876 cnv 1 15 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 876 A: a value. Type: float.;
#X msg 110 901 b;
#X text 245 901 Arguments are:;
#X obj 255 924 cnv 1 14 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 924 B: b value. Type: float.;
#X msg 110 949 dt;
#X text 245 949 Arguments are:;
#X obj 255 972 cnv 1 22 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 972 DT: dt value. Type: float.;
#X msg 110 997 fold_cut;
#X text 245 997 Arguments are:;
#X obj 255 1020 cnv 1 67 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1020 FOLD_CUT: enable fold / cut value action. Type: int.;
#X msg 110 1045 om;
#X text 245 1045 Arguments are:;
#X obj 255 1068 cnv 1 21 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1068 OM: enables output when cut or fold value is changed.
Type: int.;
#X msg 110 1108 reset;
#X text 245 1108 reset state.;
#X msg 110 1135 set;
#X text 245 1135 Arguments are:;
#X obj 255 1158 cnv 1 29 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1158 SET: set to value. Type: float.;
#X msg 110 1183 w;
#X text 245 1183 Arguments are:;
#X obj 255 1206 cnv 1 15 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1206 W: w value. Type: float.;
#X obj 20 1241 cnv 1 745 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 1246 cnv 5 64 26 empty empty inlets: 4 10 0 14 -262144
-49933 0;
#X text 110 1247 1\.;
#X text 150 1247 *bang*;
#X text 245 1247 output value.;
#X obj 20 1277 cnv 1 745 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 1282 cnv 5 73 26 empty empty outlets: 4 10 0 14 -262144
-49933 0;
#X text 110 1283 1\.;
#X text 245 1283 main outlet.;
#X obj 10 48 ui.link @title index @url ../index-help.pd;
#X text 51 45 ::;
#X obj 67 48 ui.link @title ceammc @url ceammc-help.pd;
#X text 115 45 ::;
#X obj 131 48 ui.link @title noise @url ceammc.noise-help.pd;
#X obj 1 1333 cnv 5 765 48 empty empty empty 17 7 0 10 -203890 -1 0;
#X text 10 1336 library: ceammc v0.0;
#N canvas 10 1355 400 290 info 0;
#X obj 1 1 cnv 1 107 287 empty empty empty 17 7 0 10 -183085 -1 0;
#X text 10 10 library:;
#X text 120 10 ceammc;
#X text 10 32 version:;
#X text 120 32 0.0;
#X text 10 54 object:;
#X text 120 54 noise.duffing;
#X text 10 76 category:;
#X text 120 76 noise;
#X text 10 98 since:;
#X text 120 98 .5;
#X text 10 120 authors:;
#X text 120 120 Paul Bourke \, Andr√© Sier;
#X text 10 142 license:;
#X text 120 142 %;
#X text 10 164 keywords:;
#X text 120 164 noise;
#X obj 120 186 declare -lib ceammc;
#X obj 120 268 cnv 1 270 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X text 120 268 generated by pddoc;
#X restore 10 1355 pd info;
#X connect 17 0 18 0;
#X connect 19 0 21 0;
#X connect 20 0 22 0;
#X connect 24 0 28 0;
#X connect 25 0 29 0;
#X connect 26 0 30 0;
#X connect 27 0 31 0;
#X connect 32 0 33 0;
#X connect 28 0 32 0;
#X connect 29 0 32 0;
#X connect 30 0 32 0;
#X connect 31 0 32 0;
#X connect 21 0 32 0;
#X connect 22 0 32 0;
#X connect 23 0 32 0;
#X connect 18 0 32 0;