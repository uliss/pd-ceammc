<?xml version="1.0" encoding="UTF-8"?>
<library xmlns:xi="http://www.w3.org/2001/XInclude" version="1.0" name="ceammc">
  <category name="an">
    <entry name="an.onset" descr="onset detector for arrays" ref_view="object">
      <xi:include href="an.onset.pddoc" parse="xml"/>
    </entry>
    <entry name="an.onset~" descr="onset detector" ref_view="object">
      <xi:include href="an.onset~.pddoc" parse="xml"/>
    </entry>
    <entry name="an.pitchtrack~" descr="pitch tracker" ref_view="object">
      <xi:include href="an.pitchtrack~.pddoc" parse="xml"/>
    </entry>
    <entry name="an.rms~" descr="root mean square with moving-average algorithm." ref_view="object">
      <xi:include href="an.rms~.pddoc" parse="xml"/>
    </entry>
    <entry name="an.tempo~" descr="tempo detector" ref_view="object">
      <xi:include href="an.tempo~.pddoc" parse="xml"/>
    </entry>
    <entry name="an.zero~" descr="zero crossing count/rate/freq calculator" ref_view="object">
      <xi:include href="an.zero~.pddoc" parse="xml"/>
    </entry>
  </category>
  <category name="array">
    <entry name="array.bpm" descr="BPM calculator" ref_view="object">
      <xi:include href="array.bpm.pddoc" parse="xml"/>
    </entry>
    <entry name="array.circular" descr="array read/write as circular buffer" ref_view="object">
      <xi:include href="array.circular.pddoc" parse="xml"/>
    </entry>
    <entry name="array.circular~" descr="circular buffer for arrays" ref_view="object">
      <xi:include href="array.circular~.pddoc" parse="xml"/>
    </entry>
    <entry name="array.convolve" descr="array FFT convolution" ref_view="object">
      <xi:include href="array.convolve.pddoc" parse="xml"/>
    </entry>
    <entry name="array.copy" descr="copy samples from one array to another" ref_view="object">
      <xi:include href="array.copy.pddoc" parse="xml"/>
    </entry>
    <entry name="array.do" descr="iterate and modify array content via side-chain" ref_view="object">
      <xi:include href="array.do.pddoc" parse="xml"/>
    </entry>
    <entry name="array.each" descr="process each array elements via side-chain" ref_view="object">
      <xi:include href="array.each.pddoc" parse="xml"/>
    </entry>
    <entry name="array.fill" descr="fill array with single value, pattern or function" ref_view="object">
      <xi:include href="array.fill.pddoc" parse="xml"/>
    </entry>
    <entry name="array.grainer~" descr="array granulator" ref_view="object">
      <xi:include href="array.grainer~.pddoc" parse="xml"/>
    </entry>
    <entry name="array.hist" descr="calculates array histogram" ref_view="object">
      <xi:include href="array.hist.pddoc" parse="xml"/>
    </entry>
    <entry name="array.ltcplay~" descr="array player controlled by LTC" ref_view="object">
      <xi:include href="array.ltcplay~.pddoc" parse="xml"/>
    </entry>
    <entry name="array.mean" descr="calculates array arithmetic mean value" ref_view="object">
      <xi:include href="array.mean.pddoc" parse="xml"/>
    </entry>
    <entry name="array.minmax" descr="find array min and max element value" ref_view="object">
      <xi:include href="array.minmax.pddoc" parse="xml"/>
    </entry>
    <entry name="array.play~" descr="array player with variable speed and amplitude" ref_view="object">
      <xi:include href="array.play~.pddoc" parse="xml"/>
    </entry>
    <entry name="array.plot" descr="array data plotter" ref_view="object">
      <xi:include href="array.plot.pddoc" parse="xml"/>
    </entry>
    <entry name="array.plot~" descr="plot signal on specified array" ref_view="object">
      <xi:include href="array.plot~.pddoc" parse="xml"/>
    </entry>
    <entry name="array.readwrite~" descr="array reader/writer" ref_view="object">
      <xi:include href="array.readwrite~.pddoc" parse="xml"/>
    </entry>
    <entry name="array.resample" descr="array resampler" ref_view="object">
      <xi:include href="array.resample.pddoc" parse="xml"/>
    </entry>
    <entry name="array.rms" descr="calculates root mean square value for array" ref_view="object">
      <xi:include href="array.rms.pddoc" parse="xml"/>
    </entry>
    <entry name="array.set" descr="set array content from list" ref_view="object">
      <xi:include href="array.set.pddoc" parse="xml"/>
    </entry>
    <entry name="array.stddev" descr="calculates standard deviation for array values" ref_view="object">
      <xi:include href="array.stddev.pddoc" parse="xml"/>
    </entry>
    <entry name="array.stretch" descr="array time-stretch, pitch-shift or rate-change" ref_view="object">
      <xi:include href="array.stretch.pddoc" parse="xml"/>
    </entry>
    <entry name="array.sum" descr="calculates sum of array elements" ref_view="object">
      <xi:include href="array.sum.pddoc" parse="xml"/>
    </entry>
    <entry name="array.sum2" descr="calculates sum of squares of array elements" ref_view="object">
      <xi:include href="array.sum2.pddoc" parse="xml"/>
    </entry>
    <entry name="array.tramp~" descr="triggered ramp generator for array" ref_view="object">
      <xi:include href="array.tramp~.pddoc" parse="xml"/>
    </entry>
    <entry name="array.variance" descr="calculates variance of array values" ref_view="object">
      <xi:include href="array.variance.pddoc" parse="xml"/>
    </entry>
    <entry name="array.vplay" descr="simple array player for using with vline~" ref_view="object">
      <xi:include href="array.vplay.pddoc" parse="xml"/>
    </entry>
    <entry name="array.window" descr="fill array with window" ref_view="object">
      <xi:include href="array.window.pddoc" parse="xml"/>
    </entry>
    <entry name="plot.geomspace~" descr="outputs numbers spaced evenly on a log scale (a geometric progression)" ref_view="object">
      <xi:include href="plot.geomspace~.pddoc" parse="xml"/>
    </entry>
    <entry name="plot.hist~" descr="calculate and output signal histogram" ref_view="object">
      <xi:include href="plot.hist~.pddoc" parse="xml"/>
    </entry>
    <entry name="plot.linspace~" descr="outputs numbers spaced evenly spaced over a specified interval" ref_view="object">
      <xi:include href="plot.linspace~.pddoc" parse="xml"/>
    </entry>
    <entry name="plot.logspace~" descr="outputs numbers spaced evenly on a log scale" ref_view="object">
      <xi:include href="plot.logspace~.pddoc" parse="xml"/>
    </entry>
    <entry name="plot.response~" descr="output amp/phase freq response to impulse" ref_view="object">
      <xi:include href="plot.response~.pddoc" parse="xml"/>
    </entry>
  </category>
  <category name="base">
    <entry name="ceammc.search" descr="ceammc library search object" ref_view="object">
      <xi:include href="ceammc.search.pddoc" parse="xml"/>
    </entry>
    <entry name="chrono.datetime" descr="output current date and time info" ref_view="object">
      <xi:include href="chrono.datetime.pddoc" parse="xml"/>
    </entry>
    <entry name="convolve~" descr="realtime FFT convolution" ref_view="object">
      <xi:include href="convolve~.pddoc" parse="xml"/>
    </entry>
    <entry name="function" descr="named function" ref_view="link">
      <xi:include href="function.pddoc" parse="xml"/>
    </entry>
    <entry name="function.call" descr="call named function" ref_view="object">
      <xi:include href="function.call.pddoc" parse="xml"/>
    </entry>
    <entry name="gain~" descr="multislot signal gain" ref_view="object">
      <xi:include href="gain~.pddoc" parse="xml"/>
    </entry>
    <entry name="gate~" descr="multislot signal gate" ref_view="object">
      <xi:include href="gate~.pddoc" parse="xml"/>
    </entry>
    <entry name="logger" descr="advanced data logger" ref_view="object">
      <xi:include href="logger.pddoc" parse="xml"/>
    </entry>
    <entry name="matrix~" descr="signal routing matrix" ref_view="object">
      <xi:include href="matrix~.pddoc" parse="xml"/>
    </entry>
    <entry name="merge~" descr="parametrized signal merge" ref_view="object">
      <xi:include href="merge~.pddoc" parse="xml"/>
    </entry>
    <entry name="metro.choice" descr="metro with random choice from timeset" ref_view="object">
      <xi:include href="metro.choice.pddoc" parse="xml"/>
    </entry>
    <entry name="metro.pattern" descr="metro with rhythmic patterns" ref_view="object">
      <xi:include href="metro.pattern.pddoc" parse="xml"/>
    </entry>
    <entry name="metro.random" descr="metro random bang with specified range" ref_view="object">
      <xi:include href="metro.random.pddoc" parse="xml"/>
    </entry>
    <entry name="metro.seq" descr="metro sequencer" ref_view="object">
      <xi:include href="metro.seq.pddoc" parse="xml"/>
    </entry>
    <entry name="metro.wchoice" descr="metro with weighted random choice from timeset" ref_view="object">
      <xi:include href="metro.wchoice.pddoc" parse="xml"/>
    </entry>
    <entry name="mix~" descr="multislot signal mixer" ref_view="object">
      <xi:include href="mix~.pddoc" parse="xml"/>
    </entry>
    <entry name="nsig~" descr="Mulitchannel converter from control to audio rate" ref_view="object">
      <xi:include href="nsig~.pddoc" parse="xml"/>
    </entry>
    <entry name="obj.props" descr="property extractor" ref_view="object">
      <xi:include href="obj.props.pddoc" parse="xml"/>
    </entry>
    <entry name="radio" descr="float index to outlet values as radio switch" ref_view="object">
      <xi:include href="radio.pddoc" parse="xml"/>
    </entry>
    <entry name="split~" descr="parametrized signal splitter" ref_view="object">
      <xi:include href="split~.pddoc" parse="xml"/>
    </entry>
    <entry name="spring" descr="float value &quot;spring&quot;" ref_view="object">
      <xi:include href="spring.pddoc" parse="xml"/>
    </entry>
    <entry name="sync" descr="value synchronization" ref_view="object">
      <xi:include href="sync.pddoc" parse="xml"/>
    </entry>
    <entry name="window" descr="returns window value by given window position" ref_view="object">
      <xi:include href="window.pddoc" parse="xml"/>
    </entry>
    <entry name="xdac~" descr="dac~ with channel ranges" ref_view="object">
      <xi:include href="xdac~.pddoc" parse="xml"/>
    </entry>
    <entry name="xfade2~" descr="multi stereo-signal crossfade" ref_view="object">
      <xi:include href="xfade2~.pddoc" parse="xml"/>
    </entry>
    <entry name="xfade~" descr="multi signal crossfade" ref_view="object">
      <xi:include href="xfade~.pddoc" parse="xml"/>
    </entry>
    <entry name="z~" descr="sample delay" ref_view="object">
      <xi:include href="z~.pddoc" parse="xml"/>
    </entry>
  </category>
  <category name="chaos">
    <entry name="chaos.gbman0" descr="Gingerbreadman map chaotic generator" ref_view="object">
      <xi:include href="chaos.gbman0.pddoc" parse="xml"/>
    </entry>
    <entry name="chaos.gbman0~" descr="Gingerbreadman map chaotic generator" ref_view="object">
      <xi:include href="chaos.gbman0~.pddoc" parse="xml"/>
    </entry>
    <entry name="chaos.jong" descr="Peter de Jong attractor" ref_view="object">
      <xi:include href="chaos.jong.pddoc" parse="xml"/>
    </entry>
    <entry name="chaos.logistic" descr="Logistic map chaotic generator" ref_view="object">
      <xi:include href="chaos.logistic.pddoc" parse="xml"/>
    </entry>
    <entry name="chaos.std0" descr="Standard map chaotic generator" ref_view="object">
      <xi:include href="chaos.std0.pddoc" parse="xml"/>
    </entry>
    <entry name="chaos.std0~" descr="Standard map chaotic generator" ref_view="object">
      <xi:include href="chaos.std0~.pddoc" parse="xml"/>
    </entry>
  </category>
  <category name="conv">
    <entry name="array.p2s" descr="convert array phase [0..1] to sample position" ref_view="object">
      <xi:include href="array.p2s.pddoc" parse="xml"/>
    </entry>
    <entry name="array.s2p" descr="convert sample position to phase range [0..1]" ref_view="object">
      <xi:include href="array.s2p.pddoc" parse="xml"/>
    </entry>
    <entry name="conv.amp2dbfs" descr="convert from amplitude to decibel full scale" ref_view="object">
      <xi:include href="conv.amp2dbfs.pddoc" parse="xml"/>
    </entry>
    <entry name="conv.amp2dbfs~" descr="convert from amplitude to decibel full scale" ref_view="object">
      <xi:include href="conv.amp2dbfs~.pddoc" parse="xml"/>
    </entry>
    <entry name="conv.bar2ms" descr="calculate bar and beat duration" ref_view="object">
      <xi:include href="conv.bar2ms.pddoc" parse="xml"/>
    </entry>
    <entry name="conv.bits2bang" descr="convert list of bits to bang events" ref_view="object">
      <xi:include href="conv.bits2bang.pddoc" parse="xml"/>
    </entry>
    <entry name="conv.bits2int" descr="convert list of bits to integer" ref_view="object">
      <xi:include href="conv.bits2int.pddoc" parse="xml"/>
    </entry>
    <entry name="conv.bits2note" descr="convert list of bits to note events" ref_view="object">
      <xi:include href="conv.bits2note.pddoc" parse="xml"/>
    </entry>
    <entry name="conv.bits2pos" descr="convert list of bits to list of bit position" ref_view="object">
      <xi:include href="conv.bits2pos.pddoc" parse="xml"/>
    </entry>
    <entry name="conv.bpm2hz" descr="converts BPM to frequency in hertz" ref_view="object">
      <xi:include href="conv.bpm2hz.pddoc" parse="xml"/>
    </entry>
    <entry name="conv.bpm2ms" descr="convert frequency in BPM to period in milliseconds" ref_view="object">
      <xi:include href="conv.bpm2ms.pddoc" parse="xml"/>
    </entry>
    <entry name="conv.bpm2sec" descr="convert frequency in BPM to period in seconds" ref_view="object">
      <xi:include href="conv.bpm2sec.pddoc" parse="xml"/>
    </entry>
    <entry name="conv.car2pol" descr="convert cartesian coords to polar" ref_view="object">
      <xi:include href="conv.car2pol.pddoc" parse="xml"/>
    </entry>
    <entry name="conv.cc2amp" descr="convert from MIDI Control Change range" ref_view="object">
      <xi:include href="conv.cc2amp.pddoc" parse="xml"/>
    </entry>
    <entry name="conv.char2morse" descr="convert character to morse code" ref_view="object">
      <xi:include href="conv.char2morse.pddoc" parse="xml"/>
    </entry>
    <entry name="conv.color2rgba" descr="convert named or hex color to separate RGBA values" ref_view="object">
      <xi:include href="conv.color2rgba.pddoc" parse="xml"/>
    </entry>
    <entry name="conv.dbfs2amp" descr="convert decibel full scale to amplitude" ref_view="object">
      <xi:include href="conv.dbfs2amp.pddoc" parse="xml"/>
    </entry>
    <entry name="conv.dbfs2amp~" descr="convert decibel full scale to amplitude" ref_view="object">
      <xi:include href="conv.dbfs2amp~.pddoc" parse="xml"/>
    </entry>
    <entry name="conv.degree2key" descr="convert scale degree to key" ref_view="object">
      <xi:include href="conv.degree2key.pddoc" parse="xml"/>
    </entry>
    <entry name="conv.edge2bang" descr="edge detector for numeric stream" ref_view="object">
      <xi:include href="conv.edge2bang.pddoc" parse="xml"/>
    </entry>
    <entry name="conv.guido2note" descr="convert Guido notation into MIDI and duration" ref_view="object">
      <xi:include href="conv.guido2note.pddoc" parse="xml"/>
    </entry>
    <entry name="conv.hex2int" descr="hex symbol to int value" ref_view="object">
      <xi:include href="conv.hex2int.pddoc" parse="xml"/>
    </entry>
    <entry name="conv.hsl2rgb" descr="convert HSL color values to RGB" ref_view="object">
      <xi:include href="conv.hsl2rgb.pddoc" parse="xml"/>
    </entry>
    <entry name="conv.int2bits" descr="convert integer to list of bits" ref_view="object">
      <xi:include href="conv.int2bits.pddoc" parse="xml"/>
    </entry>
    <entry name="conv.lab2rgb" descr="convert LAB color values to RGB" ref_view="object">
      <xi:include href="conv.lab2rgb.pddoc" parse="xml"/>
    </entry>
    <entry name="conv.lin2curve" descr="map linear to exponential range with 0 allowed." ref_view="object">
      <xi:include href="conv.lin2curve.pddoc" parse="xml"/>
    </entry>
    <entry name="conv.lin2exp" descr="maps linear range to exponential range" ref_view="object">
      <xi:include href="conv.lin2exp.pddoc" parse="xml"/>
    </entry>
    <entry name="conv.lin2lin" descr="convert from one linear range to another" ref_view="object">
      <xi:include href="conv.lin2lin.pddoc" parse="xml"/>
    </entry>
    <entry name="conv.lin2lin~" descr="convert from one linear range to another for signals" ref_view="object">
      <xi:include href="conv.lin2lin~.pddoc" parse="xml"/>
    </entry>
    <entry name="conv.list2props" descr="converts list to series of property messages" ref_view="object">
      <xi:include href="conv.list2props.pddoc" parse="xml"/>
    </entry>
    <entry name="conv.midi2freq" descr="convert from midi pitch to frequency in hz (with various base A and temperament)" ref_view="object">
      <xi:include href="conv.midi2freq.pddoc" parse="xml"/>
    </entry>
    <entry name="conv.ms2bpm" descr="convert period in milliseconds to frequency in BPM" ref_view="object">
      <xi:include href="conv.ms2bpm.pddoc" parse="xml"/>
    </entry>
    <entry name="conv.ms2samp" descr="convert time in milliseconds to number of samples according to current samplerate" ref_view="object">
      <xi:include href="conv.ms2samp.pddoc" parse="xml"/>
    </entry>
    <entry name="conv.ms2samp~" descr="convert time in milliseconds to number of samples according to current samplerate" ref_view="object">
      <xi:include href="conv.ms2samp~.pddoc" parse="xml"/>
    </entry>
    <entry name="conv.ms2str" descr="converts float time in milliseconds to formated symbol (or string)" ref_view="object">
      <xi:include href="conv.ms2str.pddoc" parse="xml"/>
    </entry>
    <entry name="conv.note2guido" descr="convert MIDI note to Guido notation" ref_view="object">
      <xi:include href="conv.note2guido.pddoc" parse="xml"/>
    </entry>
    <entry name="conv.phase2rad" descr="convert phase value [0-1] to radians [0-2π]" ref_view="object">
      <xi:include href="conv.phase2rad.pddoc" parse="xml"/>
    </entry>
    <entry name="conv.phase2rad~" descr="convert phase value [0-1] to radians [0-2π]" ref_view="object">
      <xi:include href="conv.phase2rad~.pddoc" parse="xml"/>
    </entry>
    <entry name="conv.pitch2midi" descr="converts symbol pitch name to MIDI note number" ref_view="object">
      <xi:include href="conv.pitch2midi.pddoc" parse="xml"/>
    </entry>
    <entry name="conv.pol2car" descr="convert from polar coordinates to cartesian" ref_view="object">
      <xi:include href="conv.pol2car.pddoc" parse="xml"/>
    </entry>
    <entry name="conv.rad2phase" descr="convert radians value to phase" ref_view="object">
      <xi:include href="conv.rad2phase.pddoc" parse="xml"/>
    </entry>
    <entry name="conv.rad2phase~" descr="convert radians value to phase" ref_view="object">
      <xi:include href="conv.rad2phase~.pddoc" parse="xml"/>
    </entry>
    <entry name="conv.rgb2hex" descr="convert separate RGB values to hex color" ref_view="object">
      <xi:include href="conv.rgb2hex.pddoc" parse="xml"/>
    </entry>
    <entry name="conv.samp2ms" descr="convert samples to time according to samplerate" ref_view="object">
      <xi:include href="conv.samp2ms.pddoc" parse="xml"/>
    </entry>
    <entry name="conv.samp2ms~" descr="convert samples to milliseconds according to samplerate" ref_view="object">
      <xi:include href="conv.samp2ms~.pddoc" parse="xml"/>
    </entry>
    <entry name="conv.samp2sec" descr="convert samples to time according to samplerate" ref_view="object">
      <xi:include href="conv.samp2sec.pddoc" parse="xml"/>
    </entry>
    <entry name="conv.sec2bpm" descr="convert period in seconds to frequency in BPM" ref_view="object">
      <xi:include href="conv.sec2bpm.pddoc" parse="xml"/>
    </entry>
    <entry name="conv.sec2samp" descr="convert time in seconds to number of samples according to current samplerate" ref_view="object">
      <xi:include href="conv.sec2samp.pddoc" parse="xml"/>
    </entry>
    <entry name="conv.sec2str" descr="converts float time in seconds to formated symbol (or string)" ref_view="object">
      <xi:include href="conv.sec2str.pddoc" parse="xml"/>
    </entry>
    <entry name="conv.semi2ratio" descr="convert interval in semitones to frequency ratio in 12-ET" ref_view="object">
      <xi:include href="conv.semi2ratio.pddoc" parse="xml"/>
    </entry>
    <entry name="conv.sig2float~" descr="convert signal to floats" ref_view="object">
      <xi:include href="conv.sig2float~.pddoc" parse="xml"/>
    </entry>
    <entry name="conv.str2sec" descr="converts formatted time to float value in seconds" ref_view="object">
      <xi:include href="conv.str2sec.pddoc" parse="xml"/>
    </entry>
    <entry name="music.dur2time" descr="convert duration list to time" ref_view="object">
      <xi:include href="music.dur2time.pddoc" parse="xml"/>
    </entry>
    <entry name="music.voice2midi" descr="convert voice music list of midi pitches" ref_view="object">
      <xi:include href="music.voice2midi.pddoc" parse="xml"/>
    </entry>
  </category>
  <category name="data">
    <entry name="color.mix" descr="color mixer" ref_view="object">
      <xi:include href="color.mix.pddoc" parse="xml"/>
    </entry>
    <entry name="color.scale" descr="create color scales" ref_view="object">
      <xi:include href="color.scale.pddoc" parse="xml"/>
    </entry>
    <entry name="data.bimap" descr="bidirectional map container" ref_view="object">
      <xi:include href="data.bimap.pddoc" parse="xml"/>
    </entry>
    <entry name="data.color" descr="Color datatype" ref_view="object">
      <xi:include href="data.color.pddoc" parse="xml"/>
    </entry>
    <entry name="data.copy" descr="make copy for any data types: MList, Set etc..." ref_view="object">
      <xi:include href="data.copy.pddoc" parse="xml"/>
    </entry>
    <entry name="data.dict" descr="dictionary container: store values by key" ref_view="object">
      <xi:include href="data.dict.pddoc" parse="xml"/>
    </entry>
    <entry name="data.fifo" descr="First-In-First-Out (FIFO) queue data container" ref_view="object">
      <xi:include href="data.fifo.pddoc" parse="xml"/>
    </entry>
    <entry name="data.float" descr="robust float object" ref_view="object">
      <xi:include href="data.float.pddoc" parse="xml"/>
    </entry>
    <entry name="data.int" descr="robust int object" ref_view="object">
      <xi:include href="data.int.pddoc" parse="xml"/>
    </entry>
    <entry name="data.list" descr="list container" ref_view="object">
      <xi:include href="data.list.pddoc" parse="xml"/>
    </entry>
    <entry name="data.mlist" descr="multidimensional list container" ref_view="object">
      <xi:include href="data.mlist.pddoc" parse="xml"/>
    </entry>
    <entry name="data.set" descr="container that store unique elements" ref_view="object">
      <xi:include href="data.set.pddoc" parse="xml"/>
    </entry>
    <entry name="data.set2list" descr="converts set to list" ref_view="object">
      <xi:include href="data.set2list.pddoc" parse="xml"/>
    </entry>
    <entry name="dict.contains" descr="predicate to check if dict contains a keys" ref_view="object">
      <xi:include href="dict.contains.pddoc" parse="xml"/>
    </entry>
    <entry name="dict.each" descr="map each value in dict" ref_view="object">
      <xi:include href="dict.each.pddoc" parse="xml"/>
    </entry>
    <entry name="dict.from_list" descr="creates dictionary from list" ref_view="object">
      <xi:include href="dict.from_list.pddoc" parse="xml"/>
    </entry>
    <entry name="dict.get" descr="output dict values" ref_view="object">
      <xi:include href="dict.get.pddoc" parse="xml"/>
    </entry>
    <entry name="dict.keys" descr="get list of dict keys" ref_view="object">
      <xi:include href="dict.keys.pddoc" parse="xml"/>
    </entry>
    <entry name="dict.pass" descr="passes specified keys in dict" ref_view="object">
      <xi:include href="dict.pass.pddoc" parse="xml"/>
    </entry>
    <entry name="dict.reject" descr="rejects specified keys from dict" ref_view="object">
      <xi:include href="dict.reject.pddoc" parse="xml"/>
    </entry>
    <entry name="dict.size" descr="dictionary size" ref_view="object">
      <xi:include href="dict.size.pddoc" parse="xml"/>
    </entry>
    <entry name="dict.to_list" descr="converts dictionary to plain list" ref_view="object">
      <xi:include href="dict.to_list.pddoc" parse="xml"/>
    </entry>
    <entry name="dict.values" descr="dictionary values as mlist" ref_view="object">
      <xi:include href="dict.values.pddoc" parse="xml"/>
    </entry>
    <entry name="global.bimap" descr="Global visibility bidirectional map container" ref_view="object">
      <xi:include href="global.bimap.pddoc" parse="xml"/>
    </entry>
    <entry name="local.bimap" descr="local to patch bidirectional map container" ref_view="object">
      <xi:include href="local.bimap.pddoc" parse="xml"/>
    </entry>
    <entry name="mlist.flatten" descr="flatten nested mlist" ref_view="object">
      <xi:include href="mlist.flatten.pddoc" parse="xml"/>
    </entry>
    <entry name="rtree.to_list" descr="convert OpenMusic-like rhythm tree to list of fractions" ref_view="object">
      <xi:include href="rtree.to_list.pddoc" parse="xml"/>
    </entry>
    <entry name="set.contains" descr="check if specified element is in set" ref_view="object">
      <xi:include href="set.contains.pddoc" parse="xml"/>
    </entry>
    <entry name="set.diff" descr="difference between two sets" ref_view="object">
      <xi:include href="set.diff.pddoc" parse="xml"/>
    </entry>
    <entry name="set.equal" descr="checks if two sets are equal (contains same elements)" ref_view="object">
      <xi:include href="set.equal.pddoc" parse="xml"/>
    </entry>
    <entry name="set.intersect" descr="output intersection of given sets" ref_view="object">
      <xi:include href="set.intersect.pddoc" parse="xml"/>
    </entry>
    <entry name="set.size" descr="get number of elements in set" ref_view="object">
      <xi:include href="set.size.pddoc" parse="xml"/>
    </entry>
    <entry name="set.symdiff" descr="symmetric difference between two sets" ref_view="object">
      <xi:include href="set.symdiff.pddoc" parse="xml"/>
    </entry>
    <entry name="set.union" descr="output union of given sets" ref_view="object">
      <xi:include href="set.union.pddoc" parse="xml"/>
    </entry>
  </category>
  <category name="dyn">
    <entry name="dyn.comp2~" descr="stereo dynamic range compressor" ref_view="object">
      <xi:include href="dyn.comp2~.pddoc" parse="xml"/>
    </entry>
    <entry name="dyn.comp_peak2~" descr="stereo peak feed forward compressor with channel linking" ref_view="object">
      <xi:include href="dyn.comp_peak2~.pddoc" parse="xml"/>
    </entry>
    <entry name="dyn.comp_peak~" descr="mono dynamic range peak feed forward compressor" ref_view="object">
      <xi:include href="dyn.comp_peak~.pddoc" parse="xml"/>
    </entry>
    <entry name="dyn.comp_up2~" descr="stereo upward compressor with channel linking" ref_view="object">
      <xi:include href="dyn.comp_up2~.pddoc" parse="xml"/>
    </entry>
    <entry name="dyn.comp_up~" descr="mono upward compressor" ref_view="object">
      <xi:include href="dyn.comp_up~.pddoc" parse="xml"/>
    </entry>
    <entry name="dyn.comp~" descr="mono dynamic range compressors" ref_view="object">
      <xi:include href="dyn.comp~.pddoc" parse="xml"/>
    </entry>
    <entry name="dyn.expand2~" descr="stereo dynamic range expander with channel linking" ref_view="object">
      <xi:include href="dyn.expand2~.pddoc" parse="xml"/>
    </entry>
    <entry name="dyn.expand~" descr="mono dynamic range expander" ref_view="object">
      <xi:include href="dyn.expand~.pddoc" parse="xml"/>
    </entry>
    <entry name="dyn.gate2~" descr="stereo signal gate" ref_view="object">
      <xi:include href="dyn.gate2~.pddoc" parse="xml"/>
    </entry>
    <entry name="dyn.gate~" descr="mono signal gate" ref_view="object">
      <xi:include href="dyn.gate~.pddoc" parse="xml"/>
    </entry>
    <entry name="dyn.limit2~" descr="stereo 1176LN Peak Limiter" ref_view="object">
      <xi:include href="dyn.limit2~.pddoc" parse="xml"/>
    </entry>
    <entry name="dyn.limit~" descr="mono 1176LN Peak Limiter" ref_view="object">
      <xi:include href="dyn.limit~.pddoc" parse="xml"/>
    </entry>
    <entry name="dyn.softclip~" descr="soft signal clip" ref_view="object">
      <xi:include href="dyn.softclip~.pddoc" parse="xml"/>
    </entry>
  </category>
  <category name="env">
    <entry name="env.adsr~" descr="ADSR (Attack, Decay, Sustain, Release) envelope generator" ref_view="object">
      <xi:include href="env.adsr~.pddoc" parse="xml"/>
    </entry>
    <entry name="env.ar~" descr="Attack/Release envelope generator" ref_view="object">
      <xi:include href="env.ar~.pddoc" parse="xml"/>
    </entry>
    <entry name="env.asr2~" descr="stereo Attack/Sustain/Release envelope generator" ref_view="object">
      <xi:include href="env.asr2~.pddoc" parse="xml"/>
    </entry>
    <entry name="env.asr~" descr="Attack/Sustain/Release envelope generator" ref_view="object">
      <xi:include href="env.asr~.pddoc" parse="xml"/>
    </entry>
    <entry name="env.concat" descr="Envelope concatenation" ref_view="object">
      <xi:include href="env.concat.pddoc" parse="xml"/>
    </entry>
    <entry name="env.follow~" descr="Envelope follower with independent attack and release times" ref_view="object">
      <xi:include href="env.follow~.pddoc" parse="xml"/>
    </entry>
    <entry name="env.mix" descr="Mix between two envelopes. Envelopes should contain equal number of segments" ref_view="object">
      <xi:include href="env.mix.pddoc" parse="xml"/>
    </entry>
    <entry name="env.smooth~" descr="An envelope with an exponential attack and release" ref_view="object">
      <xi:include href="env.smooth~.pddoc" parse="xml"/>
    </entry>
    <entry name="env.tscale" descr="Envelope time-scale" ref_view="object">
      <xi:include href="env.tscale.pddoc" parse="xml"/>
    </entry>
    <entry name="env.tshift" descr="Envelope time-shift (horizontal)" ref_view="object">
      <xi:include href="env.tshift.pddoc" parse="xml"/>
    </entry>
    <entry name="env.vscale" descr="Envelope value-scale" ref_view="object">
      <xi:include href="env.vscale.pddoc" parse="xml"/>
    </entry>
    <entry name="env2array" descr="Renders envelope to specified array" ref_view="object">
      <xi:include href="env2array.pddoc" parse="xml"/>
    </entry>
    <entry name="env2vline" descr="Converts envelope to bunch of vline messages" ref_view="object">
      <xi:include href="env2vline.pddoc" parse="xml"/>
    </entry>
    <entry name="envelope" descr="Envelope data type" ref_view="object">
      <xi:include href="envelope.pddoc" parse="xml"/>
    </entry>
    <entry name="vline2env" descr="Converts vline messages to env" ref_view="object">
      <xi:include href="vline2env.pddoc" parse="xml"/>
    </entry>
  </category>
  <category name="flow">
    <entry name="expand_env" descr="Substitute environment variables in data stream" ref_view="object">
      <xi:include href="expand_env.pddoc" parse="xml"/>
    </entry>
    <entry name="flow.append" descr="append message to flow stream" ref_view="object">
      <xi:include href="flow.append.pddoc" parse="xml"/>
    </entry>
    <entry name="flow.change" descr="rejects redundant input values" ref_view="object">
      <xi:include href="flow.change.pddoc" parse="xml"/>
    </entry>
    <entry name="flow.count" descr="control flow event counter" ref_view="object">
      <xi:include href="flow.count.pddoc" parse="xml"/>
    </entry>
    <entry name="flow.delay" descr="enhanced version on vanilla delay object" ref_view="object">
      <xi:include href="flow.delay.pddoc" parse="xml"/>
    </entry>
    <entry name="flow.demultiplex" descr="control flow demultiplexer" ref_view="object">
      <xi:include href="flow.demultiplex.pddoc" parse="xml"/>
    </entry>
    <entry name="flow.demultiplex2~" descr="audio stream stereo demultiplexer" ref_view="object">
      <xi:include href="flow.demultiplex2~.pddoc" parse="xml"/>
    </entry>
    <entry name="flow.demultiplex~" descr="audio stream demultiplexer" ref_view="object">
      <xi:include href="flow.demultiplex~.pddoc" parse="xml"/>
    </entry>
    <entry name="flow.dollar" descr="data flow dollar converter" ref_view="object">
      <xi:include href="flow.dollar.pddoc" parse="xml"/>
    </entry>
    <entry name="flow.dup" descr="message duplicator" ref_view="object">
      <xi:include href="flow.dup.pddoc" parse="xml"/>
    </entry>
    <entry name="flow.float" descr="pass floats" ref_view="object">
      <xi:include href="flow.float.pddoc" parse="xml"/>
    </entry>
    <entry name="flow.gate" descr="control flow gate. [spigot] analog" ref_view="object">
      <xi:include href="flow.gate.pddoc" parse="xml"/>
    </entry>
    <entry name="flow.greater" descr="numeric stream router" ref_view="object">
      <xi:include href="flow.greater.pddoc" parse="xml"/>
    </entry>
    <entry name="flow.greater_eq" descr="numeric stream router" ref_view="object">
      <xi:include href="flow.greater_eq.pddoc" parse="xml"/>
    </entry>
    <entry name="flow.group" descr="group input atoms in list of specified size" ref_view="object">
      <xi:include href="flow.group.pddoc" parse="xml"/>
    </entry>
    <entry name="flow.histogram" descr="control flow histogram" ref_view="object">
      <xi:include href="flow.histogram.pddoc" parse="xml"/>
    </entry>
    <entry name="flow.interval" descr="measure time between flow events" ref_view="object">
      <xi:include href="flow.interval.pddoc" parse="xml"/>
    </entry>
    <entry name="flow.less" descr="numeric stream router, like many [moses]" ref_view="object">
      <xi:include href="flow.less.pddoc" parse="xml"/>
    </entry>
    <entry name="flow.less_eq" descr="numeric stream router, like many [moses]" ref_view="object">
      <xi:include href="flow.less_eq.pddoc" parse="xml"/>
    </entry>
    <entry name="flow.list2many" descr="routes list element with message selectors" ref_view="object">
      <xi:include href="flow.list2many.pddoc" parse="xml"/>
    </entry>
    <entry name="flow.match" descr="route data flow by regexp match" ref_view="object">
      <xi:include href="flow.match.pddoc" parse="xml"/>
    </entry>
    <entry name="flow.mem" descr="store data flow in memory" ref_view="object">
      <xi:include href="flow.mem.pddoc" parse="xml"/>
    </entry>
    <entry name="flow.multiplex" descr="control flow multiplexer" ref_view="object">
      <xi:include href="flow.multiplex.pddoc" parse="xml"/>
    </entry>
    <entry name="flow.multiplex2~" descr="audio stream stereo multiplexer" ref_view="object">
      <xi:include href="flow.multiplex2~.pddoc" parse="xml"/>
    </entry>
    <entry name="flow.multiplex~" descr="audio stream multiplexer" ref_view="object">
      <xi:include href="flow.multiplex~.pddoc" parse="xml"/>
    </entry>
    <entry name="flow.once" descr="one message pass thru" ref_view="object">
      <xi:include href="flow.once.pddoc" parse="xml"/>
    </entry>
    <entry name="flow.pack" descr="flow pack" ref_view="object">
      <xi:include href="flow.pack.pddoc" parse="xml"/>
    </entry>
    <entry name="flow.pass" descr="pass specified values" ref_view="object">
      <xi:include href="flow.pass.pddoc" parse="xml"/>
    </entry>
    <entry name="flow.pass_if" descr="pass values that accepted by predicate object" ref_view="object">
      <xi:include href="flow.pass_if.pddoc" parse="xml"/>
    </entry>
    <entry name="flow.pipe" descr="enhanced version on vanilla pipe object" ref_view="object">
      <xi:include href="flow.pipe.pddoc" parse="xml"/>
    </entry>
    <entry name="flow.prepend" descr="prepend message before received one" ref_view="object">
      <xi:include href="flow.prepend.pddoc" parse="xml"/>
    </entry>
    <entry name="flow.queue" descr="multi-channel control flow sync queue (or FIFO)" ref_view="object">
      <xi:include href="flow.queue.pddoc" parse="xml"/>
    </entry>
    <entry name="flow.record" descr="flow stream recorder/player" ref_view="object">
      <xi:include href="flow.record.pddoc" parse="xml"/>
    </entry>
    <entry name="flow.reject" descr="reject specified values" ref_view="object">
      <xi:include href="flow.reject.pddoc" parse="xml"/>
    </entry>
    <entry name="flow.reject_if" descr="reject values by predicate" ref_view="object">
      <xi:include href="flow.reject_if.pddoc" parse="xml"/>
    </entry>
    <entry name="flow.ring" descr="dataflow ring buffer" ref_view="object">
      <xi:include href="flow.ring.pddoc" parse="xml"/>
    </entry>
    <entry name="flow.route" descr="advanced message router" ref_view="object">
      <xi:include href="flow.route.pddoc" parse="xml"/>
    </entry>
    <entry name="flow.select" descr="vanilla flow on steroids" ref_view="object">
      <xi:include href="flow.select.pddoc" parse="xml"/>
    </entry>
    <entry name="flow.seqdelay" descr="sequential delay/router for input flow" ref_view="object">
      <xi:include href="flow.seqdelay.pddoc" parse="xml"/>
    </entry>
    <entry name="flow.space" descr="space in time messages received at the same logical time" ref_view="object">
      <xi:include href="flow.space.pddoc" parse="xml"/>
    </entry>
    <entry name="flow.speedlim" descr="control stream speed limiter" ref_view="object">
      <xi:include href="flow.speedlim.pddoc" parse="xml"/>
    </entry>
    <entry name="flow.split" descr="split data flow by external side-chain predicate" ref_view="object">
      <xi:include href="flow.split.pddoc" parse="xml"/>
    </entry>
    <entry name="flow.stack" descr="any message stack" ref_view="object">
      <xi:include href="flow.stack.pddoc" parse="xml"/>
    </entry>
    <entry name="flow.sync" descr="bus with only hot inlets" ref_view="object">
      <xi:include href="flow.sync.pddoc" parse="xml"/>
    </entry>
    <entry name="flow.sync_pack" descr="flow pack with all hot inlets" ref_view="object">
      <xi:include href="flow.sync_pack.pddoc" parse="xml"/>
    </entry>
    <entry name="flow.tee~" descr="separate audio and control streams" ref_view="object">
      <xi:include href="flow.tee~.pddoc" parse="xml"/>
    </entry>
    <entry name="replace" descr="Replace atoms in data stream" ref_view="object">
      <xi:include href="replace.pddoc" parse="xml"/>
    </entry>
    <entry name="route.any" descr="separate any messages from bangs, floats, symbols and lists" ref_view="object">
      <xi:include href="route.any.pddoc" parse="xml"/>
    </entry>
    <entry name="route.bang" descr="separate bang messages from other types" ref_view="object">
      <xi:include href="route.bang.pddoc" parse="xml"/>
    </entry>
    <entry name="route.cycle" descr="cyclic message router" ref_view="object">
      <xi:include href="route.cycle.pddoc" parse="xml"/>
    </entry>
    <entry name="route.data" descr="separate any messages from bangs, floats, symbols and lists" ref_view="object">
      <xi:include href="route.data.pddoc" parse="xml"/>
    </entry>
    <entry name="route.float" descr="separate float messages from other types" ref_view="object">
      <xi:include href="route.float.pddoc" parse="xml"/>
    </entry>
    <entry name="route.list" descr="separate list messages from other types" ref_view="object">
      <xi:include href="route.list.pddoc" parse="xml"/>
    </entry>
    <entry name="route.prop" descr="separate property messages from other types" ref_view="object">
      <xi:include href="route.prop.pddoc" parse="xml"/>
    </entry>
    <entry name="route.random" descr="routes input flow to random outlet" ref_view="object">
      <xi:include href="route.random.pddoc" parse="xml"/>
    </entry>
    <entry name="route.symbol" descr="separate symbol messages from other types" ref_view="object">
      <xi:include href="route.symbol.pddoc" parse="xml"/>
    </entry>
  </category>
  <category name="flt">
    <entry name="flt.a-weight" descr="convert frequency to A-weight value" ref_view="object">
      <xi:include href="flt.a-weight.pddoc" parse="xml"/>
    </entry>
    <entry name="flt.biquad~" descr="second order IIR filter." ref_view="object">
      <xi:include href="flt.biquad~.pddoc" parse="xml"/>
    </entry>
    <entry name="flt.bpf12~" descr="Two pole band-pass butterworth filter" ref_view="object">
      <xi:include href="flt.bpf12~.pddoc" parse="xml"/>
    </entry>
    <entry name="flt.bpf24~" descr="Four pole band-pass butterworth filter" ref_view="object">
      <xi:include href="flt.bpf24~.pddoc" parse="xml"/>
    </entry>
    <entry name="flt.bpf36e~" descr="elliptic band-pass filter with -36db rolloff" ref_view="object">
      <xi:include href="flt.bpf36e~.pddoc" parse="xml"/>
    </entry>
    <entry name="flt.bpf72e~" descr="elliptic band-pass filter with -72db rolloff" ref_view="object">
      <xi:include href="flt.bpf72e~.pddoc" parse="xml"/>
    </entry>
    <entry name="flt.c_apf" descr="Allpass filter coefficient calculator for biquad" ref_view="object">
      <xi:include href="flt.c_apf.pddoc" parse="xml"/>
    </entry>
    <entry name="flt.c_bpf~" descr="BPF coefficient calculator for biquad filter" ref_view="object">
      <xi:include href="flt.c_bpf~.pddoc" parse="xml"/>
    </entry>
    <entry name="flt.c_highshelf~" descr="Highshelf filter coefficient calculator for biquad" ref_view="object">
      <xi:include href="flt.c_highshelf~.pddoc" parse="xml"/>
    </entry>
    <entry name="flt.c_hpf" descr="HPF coefficient calculator for biquad filter" ref_view="object">
      <xi:include href="flt.c_hpf.pddoc" parse="xml"/>
    </entry>
    <entry name="flt.c_hpf~" descr="HPF coefficient calculator for biquad filter" ref_view="object">
      <xi:include href="flt.c_hpf~.pddoc" parse="xml"/>
    </entry>
    <entry name="flt.c_lowshelf~" descr="Lowshelf filter coefficient calculator for biquad" ref_view="object">
      <xi:include href="flt.c_lowshelf~.pddoc" parse="xml"/>
    </entry>
    <entry name="flt.c_lpf" descr="LPF coefficient calculator for biquad filter" ref_view="object">
      <xi:include href="flt.c_lpf.pddoc" parse="xml"/>
    </entry>
    <entry name="flt.c_lpf~" descr="LPF coefficient calculator for biquad filter" ref_view="object">
      <xi:include href="flt.c_lpf~.pddoc" parse="xml"/>
    </entry>
    <entry name="flt.c_notch" descr="Notch filter coefficient calculator for biquad" ref_view="object">
      <xi:include href="flt.c_notch.pddoc" parse="xml"/>
    </entry>
    <entry name="flt.c_notch~" descr="Band-reject coefficient calculator for biquad filter" ref_view="object">
      <xi:include href="flt.c_notch~.pddoc" parse="xml"/>
    </entry>
    <entry name="flt.c_peak~" descr="Peaking equalizer calculator for biquad" ref_view="object">
      <xi:include href="flt.c_peak~.pddoc" parse="xml"/>
    </entry>
    <entry name="flt.c_pole" descr="One-pole coefficient calculator for biquad filter" ref_view="object">
      <xi:include href="flt.c_pole.pddoc" parse="xml"/>
    </entry>
    <entry name="flt.dcblock2~" descr="stereo DC blocker" ref_view="object">
      <xi:include href="flt.dcblock2~.pddoc" parse="xml"/>
    </entry>
    <entry name="flt.dcblock~" descr="mono DC blocker" ref_view="object">
      <xi:include href="flt.dcblock~.pddoc" parse="xml"/>
    </entry>
    <entry name="flt.eq10~" descr="graphic 10 band equalizer" ref_view="object">
      <xi:include href="flt.eq10~.pddoc" parse="xml"/>
    </entry>
    <entry name="flt.eq_peak_cq~" descr="constant-Q second order peaking equalizer section" ref_view="object">
      <xi:include href="flt.eq_peak_cq~.pddoc" parse="xml"/>
    </entry>
    <entry name="flt.eq_peak~" descr="second order &quot;peaking equalizer&quot; section (gain boost or cut near some frequency). Also called a &quot;parametric equalizer&quot; section." ref_view="object">
      <xi:include href="flt.eq_peak~.pddoc" parse="xml"/>
    </entry>
    <entry name="flt.fb_comb~" descr="feedback comb filter" ref_view="object">
      <xi:include href="flt.fb_comb~.pddoc" parse="xml"/>
    </entry>
    <entry name="flt.fbank5x1~" descr="5 band one octave butterworth filterbank" ref_view="object">
      <xi:include href="flt.fbank5x1~.pddoc" parse="xml"/>
    </entry>
    <entry name="flt.ff_comb~" descr="feed forward comb filter" ref_view="object">
      <xi:include href="flt.ff_comb~.pddoc" parse="xml"/>
    </entry>
    <entry name="flt.freqz" descr="compute the frequency response of a digital filter" ref_view="object">
      <xi:include href="flt.freqz.pddoc" parse="xml"/>
    </entry>
    <entry name="flt.freqz~" descr="compute the frequency response of a digital filter" ref_view="object">
      <xi:include href="flt.freqz~.pddoc" parse="xml"/>
    </entry>
    <entry name="flt.highshelf~" descr="gain boost|cut above some frequency" ref_view="object">
      <xi:include href="flt.highshelf~.pddoc" parse="xml"/>
    </entry>
    <entry name="flt.hpf12~" descr="High-pass second order Butterworth filter" ref_view="object">
      <xi:include href="flt.hpf12~.pddoc" parse="xml"/>
    </entry>
    <entry name="flt.hpf24~" descr="High-pass fourth order Butterworth filter" ref_view="object">
      <xi:include href="flt.hpf24~.pddoc" parse="xml"/>
    </entry>
    <entry name="flt.lowshelf~" descr="gain boost|cut below some frequency" ref_view="object">
      <xi:include href="flt.lowshelf~.pddoc" parse="xml"/>
    </entry>
    <entry name="flt.lpf12~" descr="Low-pass second order Butterworth filter" ref_view="object">
      <xi:include href="flt.lpf12~.pddoc" parse="xml"/>
    </entry>
    <entry name="flt.lpf24~" descr="Low-pass fourth order Butterworth filter" ref_view="object">
      <xi:include href="flt.lpf24~.pddoc" parse="xml"/>
    </entry>
    <entry name="flt.median" descr="Median control flow filter" ref_view="object">
      <xi:include href="flt.median.pddoc" parse="xml"/>
    </entry>
    <entry name="flt.moog_vcf~" descr="Moog Voltage Controlled Filter" ref_view="object">
      <xi:include href="flt.moog_vcf~.pddoc" parse="xml"/>
    </entry>
    <entry name="flt.notch~" descr="band-rejection filter" ref_view="object">
      <xi:include href="flt.notch~.pddoc" parse="xml"/>
    </entry>
    <entry name="flt.resonbp~" descr="Simple resonant bandpass filter" ref_view="object">
      <xi:include href="flt.resonbp~.pddoc" parse="xml"/>
    </entry>
    <entry name="flt.resonhp~" descr="Simple resonant highpass filter" ref_view="object">
      <xi:include href="flt.resonhp~.pddoc" parse="xml"/>
    </entry>
    <entry name="flt.resonlp~" descr="Simple resonant lowpass filter" ref_view="object">
      <xi:include href="flt.resonlp~.pddoc" parse="xml"/>
    </entry>
    <entry name="flt.speaker~" descr="speaker emulation band-pass filter" ref_view="object">
      <xi:include href="flt.speaker~.pddoc" parse="xml"/>
    </entry>
  </category>
  <category name="fx">
    <entry name="fx.bitdown~" descr="bit downer and downsampler effect" ref_view="object">
      <xi:include href="fx.bitdown~.pddoc" parse="xml"/>
    </entry>
    <entry name="fx.chorus~" descr="Chorus effect" ref_view="object">
      <xi:include href="fx.chorus~.pddoc" parse="xml"/>
    </entry>
    <entry name="fx.dattorro~" descr="dattorro reverb" ref_view="object">
      <xi:include href="fx.dattorro~.pddoc" parse="xml"/>
    </entry>
    <entry name="fx.delay~" descr="smooth delay with a feedback control" ref_view="object">
      <xi:include href="fx.delay~.pddoc" parse="xml"/>
    </entry>
    <entry name="fx.distortion1~" descr="distortion #1 from Guitarix effects set" ref_view="object">
      <xi:include href="fx.distortion1~.pddoc" parse="xml"/>
    </entry>
    <entry name="fx.distortion2~" descr="distortion #2 from Guitarix effects set" ref_view="object">
      <xi:include href="fx.distortion2~.pddoc" parse="xml"/>
    </entry>
    <entry name="fx.distortion3~" descr="simple distortion #3 from Guitarix effects set" ref_view="object">
      <xi:include href="fx.distortion3~.pddoc" parse="xml"/>
    </entry>
    <entry name="fx.distortion~" descr="cubic nonlinearity distortion" ref_view="object">
      <xi:include href="fx.distortion~.pddoc" parse="xml"/>
    </entry>
    <entry name="fx.drive~" descr="Guitarix drive effect" ref_view="object">
      <xi:include href="fx.drive~.pddoc" parse="xml"/>
    </entry>
    <entry name="fx.drone_box~" descr="mono sympathetic resonance generator" ref_view="object">
      <xi:include href="fx.drone_box~.pddoc" parse="xml"/>
    </entry>
    <entry name="fx.echo2~" descr="stereo echo effect" ref_view="object">
      <xi:include href="fx.echo2~.pddoc" parse="xml"/>
    </entry>
    <entry name="fx.echo~" descr="enhanced echo effect" ref_view="object">
      <xi:include href="fx.echo~.pddoc" parse="xml"/>
    </entry>
    <entry name="fx.flanger~" descr="mono flanging effect" ref_view="object">
      <xi:include href="fx.flanger~.pddoc" parse="xml"/>
    </entry>
    <entry name="fx.freeverb2~" descr="freeverb2 - stereo version of freeverb" ref_view="object">
      <xi:include href="fx.freeverb2~.pddoc" parse="xml"/>
    </entry>
    <entry name="fx.freeverb~" descr="freeverb - common used open-source reverb" ref_view="object">
      <xi:include href="fx.freeverb~.pddoc" parse="xml"/>
    </entry>
    <entry name="fx.freqshift~" descr="frequency shifter or single-sideband ring modulation" ref_view="object">
      <xi:include href="fx.freqshift~.pddoc" parse="xml"/>
    </entry>
    <entry name="fx.granulator~" descr="simple input stream granulator" ref_view="object">
      <xi:include href="fx.granulator~.pddoc" parse="xml"/>
    </entry>
    <entry name="fx.greyhole~" descr="A complex echo-like effect" ref_view="object">
      <xi:include href="fx.greyhole~.pddoc" parse="xml"/>
    </entry>
    <entry name="fx.infrev~" descr="port of Infinity VST plugin from airwindows" ref_view="object">
      <xi:include href="fx.infrev~.pddoc" parse="xml"/>
    </entry>
    <entry name="fx.jcrev~" descr="Schroeder quad reverberator from 1972" ref_view="object">
      <xi:include href="fx.jcrev~.pddoc" parse="xml"/>
    </entry>
    <entry name="fx.looper~" descr="One track looper" ref_view="object">
      <xi:include href="fx.looper~.pddoc" parse="xml"/>
    </entry>
    <entry name="fx.overdrive~" descr="overdrive effect" ref_view="object">
      <xi:include href="fx.overdrive~.pddoc" parse="xml"/>
    </entry>
    <entry name="fx.pitchshift_s~" descr="signal version of fx.pitchshift~" ref_view="object">
      <xi:include href="fx.pitchshift_s~.pddoc" parse="xml"/>
    </entry>
    <entry name="fx.pitchshift~" descr="simple pitch shifter based on 2 delay lines" ref_view="object">
      <xi:include href="fx.pitchshift~.pddoc" parse="xml"/>
    </entry>
    <entry name="fx.rb_pitchshift~" descr="rubber band pitchshift" ref_view="object">
      <xi:include href="fx.rb_pitchshift~.pddoc" parse="xml"/>
    </entry>
    <entry name="fx.recho~" descr="reversed echo effect" ref_view="object">
      <xi:include href="fx.recho~.pddoc" parse="xml"/>
    </entry>
    <entry name="fx.ringmod~" descr="ring modulator effect" ref_view="object">
      <xi:include href="fx.ringmod~.pddoc" parse="xml"/>
    </entry>
    <entry name="fx.room~" descr="Gardners room emulation algorithms" ref_view="object">
      <xi:include href="fx.room~.pddoc" parse="xml"/>
    </entry>
    <entry name="fx.satrev~" descr="Schroeder reverberator from 1971" ref_view="object">
      <xi:include href="fx.satrev~.pddoc" parse="xml"/>
    </entry>
    <entry name="fx.scramble~" descr="scramble delayed sound fragments" ref_view="object">
      <xi:include href="fx.scramble~.pddoc" parse="xml"/>
    </entry>
    <entry name="fx.shimmer~" descr="shimmer reverb effect effect" ref_view="object">
      <xi:include href="fx.shimmer~.pddoc" parse="xml"/>
    </entry>
    <entry name="fx.stutter~" descr="stutter effect" ref_view="object">
      <xi:include href="fx.stutter~.pddoc" parse="xml"/>
    </entry>
    <entry name="fx.tapiir~" descr="multi-tap delay" ref_view="object">
      <xi:include href="fx.tapiir~.pddoc" parse="xml"/>
    </entry>
    <entry name="fx.tremolo~" descr="tremolo effect from guitarix project" ref_view="object">
      <xi:include href="fx.tremolo~.pddoc" parse="xml"/>
    </entry>
    <entry name="fx.vocoder~" descr="very simple vocoder where the spectrum of the modulation signal is analyzed using a 32-band filter bank" ref_view="object">
      <xi:include href="fx.vocoder~.pddoc" parse="xml"/>
    </entry>
    <entry name="fx.wahwah~" descr="digitized CryBaby wah pedal" ref_view="object">
      <xi:include href="fx.wahwah~.pddoc" parse="xml"/>
    </entry>
    <entry name="fx.zita_rev1~" descr="Zita stereo reverb" ref_view="object">
      <xi:include href="fx.zita_rev1~.pddoc" parse="xml"/>
    </entry>
  </category>
  <category name="global">
    <entry name="global.dict" descr="global named dict object" ref_view="object">
      <xi:include href="global.dict.pddoc" parse="xml"/>
    </entry>
    <entry name="global.float" descr="global named float object" ref_view="object">
      <xi:include href="global.float.pddoc" parse="xml"/>
    </entry>
    <entry name="global.int" descr="global named integer object" ref_view="object">
      <xi:include href="global.int.pddoc" parse="xml"/>
    </entry>
    <entry name="global.list" descr="global named list object" ref_view="object">
      <xi:include href="global.list.pddoc" parse="xml"/>
    </entry>
    <entry name="global.mlist" descr="global named mlist object" ref_view="object">
      <xi:include href="global.mlist.pddoc" parse="xml"/>
    </entry>
    <entry name="global.set" descr="global named set object" ref_view="object">
      <xi:include href="global.set.pddoc" parse="xml"/>
    </entry>
  </category>
  <category name="hw">
    <entry name="hw.apple_smc" descr="query the system management control in Apples" ref_view="object">
      <xi:include href="hw.apple_smc.pddoc" parse="xml"/>
    </entry>
    <entry name="hw.apple_sms" descr="query the sudden motion sensor in Apples" ref_view="object">
      <xi:include href="hw.apple_sms.pddoc" parse="xml"/>
    </entry>
    <entry name="hw.arduino" descr="Arduino device" ref_view="object">
      <xi:include href="hw.arduino.pddoc" parse="xml"/>
    </entry>
    <entry name="hw.display" descr="get/set display properties" ref_view="object">
      <xi:include href="hw.display.pddoc" parse="xml"/>
    </entry>
    <entry name="hw.gamepad" descr="gamepad controller" ref_view="object">
      <xi:include href="hw.gamepad.pddoc" parse="xml"/>
    </entry>
    <entry name="hw.kbd_light" descr="Get/set keyboard light on some devices" ref_view="object">
      <xi:include href="hw.kbd_light.pddoc" parse="xml"/>
    </entry>
    <entry name="hw.motu.avb" descr="controls Motu AVB devices over http requests" ref_view="object">
      <xi:include href="hw.motu.avb.pddoc" parse="xml"/>
    </entry>
    <entry name="hw.printer" descr="Basic printing support" ref_view="object">
      <xi:include href="hw.printer.pddoc" parse="xml"/>
    </entry>
    <entry name="hw.serial" descr="serial port device" ref_view="object">
      <xi:include href="hw.serial.pddoc" parse="xml"/>
    </entry>
  </category>
  <category name="lang">
    <entry name="lang.faust~" descr="faust realtime compilation" ref_view="link">
      <xi:include href="lang.faust~.pddoc" parse="xml"/>
    </entry>
    <entry name="lang.lua" descr="Lua JIT language bindings" ref_view="object">
      <xi:include href="lang.lua.pddoc" parse="xml"/>
    </entry>
    <entry name="ui.faust~" descr="faust compiled ui object" ref_view="link">
      <xi:include href="ui.faust~.pddoc" parse="xml"/>
    </entry>
  </category>
  <category name="lfo">
    <entry name="lfo.+pulse~" descr="Unit-amplitude nonnegative low frequency pulse train" ref_view="object">
      <xi:include href="lfo.%2Bpulse~.pddoc" parse="xml"/>
    </entry>
    <entry name="lfo.+saw~" descr="Positive unit-amplitude low frequency saw wave" ref_view="object">
      <xi:include href="lfo.%2Bsaw~.pddoc" parse="xml"/>
    </entry>
    <entry name="lfo.+square~" descr="Positive low frequency square wave" ref_view="object">
      <xi:include href="lfo.%2Bsquare~.pddoc" parse="xml"/>
    </entry>
    <entry name="lfo.+tri~" descr="Positive unit-amplitude low frequency triangle wave" ref_view="object">
      <xi:include href="lfo.%2Btri~.pddoc" parse="xml"/>
    </entry>
    <entry name="lfo.impulse~" descr="Unit-amplitude low-frequency impulse train" ref_view="object">
      <xi:include href="lfo.impulse~.pddoc" parse="xml"/>
    </entry>
    <entry name="lfo.mosc~" descr="multi-oscillator with various waveforms" ref_view="object">
      <xi:include href="lfo.mosc~.pddoc" parse="xml"/>
    </entry>
    <entry name="lfo.pulse~" descr="Full-range unit-amplitude low frequency pulse train" ref_view="object">
      <xi:include href="lfo.pulse~.pddoc" parse="xml"/>
    </entry>
    <entry name="lfo.saw~" descr="Full-range unit-amplitude low frequency saw" ref_view="object">
      <xi:include href="lfo.saw~.pddoc" parse="xml"/>
    </entry>
    <entry name="lfo.square~" descr="Zero-mean unit-amplitude low frequency square wave" ref_view="object">
      <xi:include href="lfo.square~.pddoc" parse="xml"/>
    </entry>
    <entry name="lfo.tri~" descr="Zero-mean unit-amplitude low frequency triangle wave" ref_view="object">
      <xi:include href="lfo.tri~.pddoc" parse="xml"/>
    </entry>
  </category>
  <category name="list">
    <entry name="list.^at" descr="on input index(es) outputs list element(s)" ref_view="object">
      <xi:include href="list.%5Eat.pddoc" parse="xml"/>
    </entry>
    <entry name="list.^contains" descr="checks if input atom is found in the list" ref_view="object">
      <xi:include href="list.%5Econtains.pddoc" parse="xml"/>
    </entry>
    <entry name="list.^search" descr="on input atom returns it index in list" ref_view="object">
      <xi:include href="list.%5Esearch.pddoc" parse="xml"/>
    </entry>
    <entry name="list.all_of" descr="checks if all list atoms accepted by predicate" ref_view="object">
      <xi:include href="list.all_of.pddoc" parse="xml"/>
    </entry>
    <entry name="list.any_of" descr="checks if at least one list element is accepted by predicate" ref_view="object">
      <xi:include href="list.any_of.pddoc" parse="xml"/>
    </entry>
    <entry name="list.append" descr="append atom or list to the end of input list" ref_view="object">
      <xi:include href="list.append.pddoc" parse="xml"/>
    </entry>
    <entry name="list.apply_to" descr="modifies list value at specified position, filtering it via external object" ref_view="object">
      <xi:include href="list.apply_to.pddoc" parse="xml"/>
    </entry>
    <entry name="list.at" descr="outputs list element(s) at specified index(es)" ref_view="object">
      <xi:include href="list.at.pddoc" parse="xml"/>
    </entry>
    <entry name="list.choice" descr="outputs random element from list" ref_view="object">
      <xi:include href="list.choice.pddoc" parse="xml"/>
    </entry>
    <entry name="list.contains" descr="checks if input list contains specified atoms" ref_view="object">
      <xi:include href="list.contains.pddoc" parse="xml"/>
    </entry>
    <entry name="list.convolve" descr="convolution for lists" ref_view="object">
      <xi:include href="list.convolve.pddoc" parse="xml"/>
    </entry>
    <entry name="list.correlate" descr="list cross-correlation" ref_view="object">
      <xi:include href="list.correlate.pddoc" parse="xml"/>
    </entry>
    <entry name="list.count" descr="output the number of items that equal to specified value" ref_view="object">
      <xi:include href="list.count.pddoc" parse="xml"/>
    </entry>
    <entry name="list.count_if" descr="output the number of items that satisfy to external predicate" ref_view="object">
      <xi:include href="list.count_if.pddoc" parse="xml"/>
    </entry>
    <entry name="list.delta" descr="returns the difference between the current list of floats and the previous one." ref_view="object">
      <xi:include href="list.delta.pddoc" parse="xml"/>
    </entry>
    <entry name="list.distribution" descr="list value distribution" ref_view="object">
      <xi:include href="list.distribution.pddoc" parse="xml"/>
    </entry>
    <entry name="list.do" descr="iterate and modify list contents via side-chain" ref_view="object">
      <xi:include href="list.do.pddoc" parse="xml"/>
    </entry>
    <entry name="list.each" descr="maps each list value via external side-chain" ref_view="object">
      <xi:include href="list.each.pddoc" parse="xml"/>
    </entry>
    <entry name="list.enumerate" descr="enumerates input list" ref_view="object">
      <xi:include href="list.enumerate.pddoc" parse="xml"/>
    </entry>
    <entry name="list.equal" descr="checks if given lists are equal" ref_view="object">
      <xi:include href="list.equal.pddoc" parse="xml"/>
    </entry>
    <entry name="list.first" descr="returns first list element" ref_view="object">
      <xi:include href="list.first.pddoc" parse="xml"/>
    </entry>
    <entry name="list.gen" descr="generates list of specified length via external generator" ref_view="object">
      <xi:include href="list.gen.pddoc" parse="xml"/>
    </entry>
    <entry name="list.histogram" descr="outputs distribution histogram" ref_view="object">
      <xi:include href="list.histogram.pddoc" parse="xml"/>
    </entry>
    <entry name="list.insert" descr="insert atom or list to the specified position of input list" ref_view="object">
      <xi:include href="list.insert.pddoc" parse="xml"/>
    </entry>
    <entry name="list.integrator" descr="returns the sum of the previously stored list and the current one then stores this sum" ref_view="object">
      <xi:include href="list.integrator.pddoc" parse="xml"/>
    </entry>
    <entry name="list.last" descr="output last list element" ref_view="object">
      <xi:include href="list.last.pddoc" parse="xml"/>
    </entry>
    <entry name="list.length" descr="output the number of atoms in the list" ref_view="object">
      <xi:include href="list.length.pddoc" parse="xml"/>
    </entry>
    <entry name="list.map" descr="map list values by specified dictionary" ref_view="object">
      <xi:include href="list.map.pddoc" parse="xml"/>
    </entry>
    <entry name="list.max" descr="output largest element in the list" ref_view="object">
      <xi:include href="list.max.pddoc" parse="xml"/>
    </entry>
    <entry name="list.mean" descr="calculates average of list of floats" ref_view="object">
      <xi:include href="list.mean.pddoc" parse="xml"/>
    </entry>
    <entry name="list.min" descr="returns smallest element in the list" ref_view="object">
      <xi:include href="list.min.pddoc" parse="xml"/>
    </entry>
    <entry name="list.none_of" descr="checks if none of list atoms is accepted by predicate" ref_view="object">
      <xi:include href="list.none_of.pddoc" parse="xml"/>
    </entry>
    <entry name="list.normalize" descr="normalizes float list values to get their sum = 1.0" ref_view="object">
      <xi:include href="list.normalize.pddoc" parse="xml"/>
    </entry>
    <entry name="list.pass" descr="leave in list only specified elements" ref_view="object">
      <xi:include href="list.pass.pddoc" parse="xml"/>
    </entry>
    <entry name="list.pass_if" descr="leave only elements accepted by predicate" ref_view="object">
      <xi:include href="list.pass_if.pddoc" parse="xml"/>
    </entry>
    <entry name="list.prepend" descr="prepend atom or list before input list" ref_view="object">
      <xi:include href="list.prepend.pddoc" parse="xml"/>
    </entry>
    <entry name="list.product" descr="calculates product of floats in list" ref_view="object">
      <xi:include href="list.product.pddoc" parse="xml"/>
    </entry>
    <entry name="list.range" descr="output list smallest and largest value" ref_view="object">
      <xi:include href="list.range.pddoc" parse="xml"/>
    </entry>
    <entry name="list.reduce" descr="apply function of two arguments cumulatively to the list" ref_view="object">
      <xi:include href="list.reduce.pddoc" parse="xml"/>
    </entry>
    <entry name="list.reject" descr="remove specified element from list" ref_view="object">
      <xi:include href="list.reject.pddoc" parse="xml"/>
    </entry>
    <entry name="list.remove" descr="remove list element(s) at specified positions" ref_view="object">
      <xi:include href="list.remove.pddoc" parse="xml"/>
    </entry>
    <entry name="list.remove_if" descr="remove elements by predicate" ref_view="object">
      <xi:include href="list.remove_if.pddoc" parse="xml"/>
    </entry>
    <entry name="list.repack" descr="repack list to specified size" ref_view="object">
      <xi:include href="list.repack.pddoc" parse="xml"/>
    </entry>
    <entry name="list.repeat" descr="output new list by repeating input list specified times" ref_view="object">
      <xi:include href="list.repeat.pddoc" parse="xml"/>
    </entry>
    <entry name="list.resample" descr="resample list with specified ratio" ref_view="object">
      <xi:include href="list.resample.pddoc" parse="xml"/>
    </entry>
    <entry name="list.resize" descr="changes list size" ref_view="object">
      <xi:include href="list.resize.pddoc" parse="xml"/>
    </entry>
    <entry name="list.reverse" descr="reverses the order of the elements in the list" ref_view="object">
      <xi:include href="list.reverse.pddoc" parse="xml"/>
    </entry>
    <entry name="list.rldecode" descr="Run-length list decoder (RLE)" ref_view="object">
      <xi:include href="list.rldecode.pddoc" parse="xml"/>
    </entry>
    <entry name="list.rlencode" descr="RLE (run-length encoding) for lists" ref_view="object">
      <xi:include href="list.rlencode.pddoc" parse="xml"/>
    </entry>
    <entry name="list.rotate" descr="rotates list" ref_view="object">
      <xi:include href="list.rotate.pddoc" parse="xml"/>
    </entry>
    <entry name="list.route" descr="acts like [route] but for lists" ref_view="object">
      <xi:include href="list.route.pddoc" parse="xml"/>
    </entry>
    <entry name="list.rundiff" descr="running difference" ref_view="object">
      <xi:include href="list.rundiff.pddoc" parse="xml"/>
    </entry>
    <entry name="list.runsum" descr="running sum" ref_view="object">
      <xi:include href="list.runsum.pddoc" parse="xml"/>
    </entry>
    <entry name="list.search" descr="search specified items in input list" ref_view="object">
      <xi:include href="list.search.pddoc" parse="xml"/>
    </entry>
    <entry name="list.separate" descr="sends list elements one by one separately" ref_view="object">
      <xi:include href="list.separate.pddoc" parse="xml"/>
    </entry>
    <entry name="list.seq" descr="numeric sequence list generator" ref_view="object">
      <xi:include href="list.seq.pddoc" parse="xml"/>
    </entry>
    <entry name="list.set" descr="set list value at specified position" ref_view="object">
      <xi:include href="list.set.pddoc" parse="xml"/>
    </entry>
    <entry name="list.shift" descr="shifts the contents of the list with linear interpolation" ref_view="object">
      <xi:include href="list.shift.pddoc" parse="xml"/>
    </entry>
    <entry name="list.shuffle" descr="randomly rearranges elements in list" ref_view="object">
      <xi:include href="list.shuffle.pddoc" parse="xml"/>
    </entry>
    <entry name="list.slice" descr="extract sublist" ref_view="object">
      <xi:include href="list.slice.pddoc" parse="xml"/>
    </entry>
    <entry name="list.sort" descr="sorts list values by ascending order" ref_view="object">
      <xi:include href="list.sort.pddoc" parse="xml"/>
    </entry>
    <entry name="list.sort_with" descr="sort list with user defined side-chain" ref_view="object">
      <xi:include href="list.sort_with.pddoc" parse="xml"/>
    </entry>
    <entry name="list.split" descr="splits list into two parts, the length of first list is specified by the argument" ref_view="object">
      <xi:include href="list.split.pddoc" parse="xml"/>
    </entry>
    <entry name="list.stretch" descr="stretches list - changes its size with linear interpolation" ref_view="object">
      <xi:include href="list.stretch.pddoc" parse="xml"/>
    </entry>
    <entry name="list.sum" descr="calculates sum of floats in list" ref_view="object">
      <xi:include href="list.sum.pddoc" parse="xml"/>
    </entry>
    <entry name="list.unique" descr="removes duplicates from input list" ref_view="object">
      <xi:include href="list.unique.pddoc" parse="xml"/>
    </entry>
    <entry name="list.unpack" descr="unpack list elements to separate outlets" ref_view="object">
      <xi:include href="list.unpack.pddoc" parse="xml"/>
    </entry>
    <entry name="list.unzip" descr="splits list to N lists, each to separate output" ref_view="object">
      <xi:include href="list.unzip.pddoc" parse="xml"/>
    </entry>
    <entry name="list.walk" descr="Walks thru the list" ref_view="object">
      <xi:include href="list.walk.pddoc" parse="xml"/>
    </entry>
    <entry name="list.zip" descr="takes n lists from n inlets (specified by argument) and output their elements sequentially (list1-1 list2-1 list1-2 list2-2 etc.)." ref_view="object">
      <xi:include href="list.zip.pddoc" parse="xml"/>
    </entry>
    <xi:include href="ceammc_category_list.xml" parse="xml"/>
  </category>
  <category name="live">
    <entry name="live.capture~" descr="record up to 32s of sound and playback the recorded sound in loop" ref_view="object">
      <xi:include href="live.capture~.pddoc" parse="xml"/>
    </entry>
  </category>
  <category name="local">
    <entry name="local.dict" descr="local named dict object" ref_view="object">
      <xi:include href="local.dict.pddoc" parse="xml"/>
    </entry>
    <entry name="local.float" descr="canvas-scoped named float variable" ref_view="object">
      <xi:include href="local.float.pddoc" parse="xml"/>
    </entry>
    <entry name="local.int" descr="canvas-scoped named integer variable" ref_view="object">
      <xi:include href="local.int.pddoc" parse="xml"/>
    </entry>
    <entry name="local.list" descr="local named list object" ref_view="object">
      <xi:include href="local.list.pddoc" parse="xml"/>
    </entry>
    <entry name="local.mlist" descr="local named mlist object" ref_view="object">
      <xi:include href="local.mlist.pddoc" parse="xml"/>
    </entry>
    <entry name="local.set" descr="local named set object" ref_view="object">
      <xi:include href="local.set.pddoc" parse="xml"/>
    </entry>
  </category>
  <category name="math">
    <entry name="math.abs" descr="absolute value function" ref_view="object">
      <xi:include href="math.abs.pddoc" parse="xml"/>
    </entry>
    <entry name="math.abs~" descr="absolute value function for signals" ref_view="object">
      <xi:include href="math.abs~.pddoc" parse="xml"/>
    </entry>
    <entry name="math.acos" descr="arc cosine function" ref_view="object">
      <xi:include href="math.acos.pddoc" parse="xml"/>
    </entry>
    <entry name="math.acosh" descr="inverse hyperbolic cosine function" ref_view="object">
      <xi:include href="math.acosh.pddoc" parse="xml"/>
    </entry>
    <entry name="math.acosh~" descr="hyperbolic arc cosine for signals" ref_view="object">
      <xi:include href="math.acosh~.pddoc" parse="xml"/>
    </entry>
    <entry name="math.acos~" descr="arc cosine function for signals" ref_view="object">
      <xi:include href="math.acos~.pddoc" parse="xml"/>
    </entry>
    <entry name="math.and" descr="operation AND for multiple arguments" ref_view="object">
      <xi:include href="math.and.pddoc" parse="xml"/>
    </entry>
    <entry name="math.approx" descr="check if input value approximately equal to pattern" ref_view="object">
      <xi:include href="math.approx.pddoc" parse="xml"/>
    </entry>
    <entry name="math.asin" descr="arc sine function" ref_view="object">
      <xi:include href="math.asin.pddoc" parse="xml"/>
    </entry>
    <entry name="math.asinh" descr="inverse hyperbolic sine function" ref_view="object">
      <xi:include href="math.asinh.pddoc" parse="xml"/>
    </entry>
    <entry name="math.asinh~" descr="hyperbolic arc sine for signals" ref_view="object">
      <xi:include href="math.asinh~.pddoc" parse="xml"/>
    </entry>
    <entry name="math.asin~" descr="arc sine for signals" ref_view="object">
      <xi:include href="math.asin~.pddoc" parse="xml"/>
    </entry>
    <entry name="math.atan" descr="arc tangent function" ref_view="object">
      <xi:include href="math.atan.pddoc" parse="xml"/>
    </entry>
    <entry name="math.atanh" descr="inverse hyperbolic tangent function" ref_view="object">
      <xi:include href="math.atanh.pddoc" parse="xml"/>
    </entry>
    <entry name="math.atanh~" descr="hyperbolic arc tangent for signals" ref_view="object">
      <xi:include href="math.atanh~.pddoc" parse="xml"/>
    </entry>
    <entry name="math.atan~" descr="arc tangent for signals" ref_view="object">
      <xi:include href="math.atan~.pddoc" parse="xml"/>
    </entry>
    <entry name="math.binomial" descr="binomial coefficient calculator" ref_view="object">
      <xi:include href="math.binomial.pddoc" parse="xml"/>
    </entry>
    <entry name="math.cabs~" descr="magnitude of a complex signals" ref_view="object">
      <xi:include href="math.cabs~.pddoc" parse="xml"/>
    </entry>
    <entry name="math.carg~" descr="phase angle of a complex signals" ref_view="object">
      <xi:include href="math.carg~.pddoc" parse="xml"/>
    </entry>
    <entry name="math.cbrt" descr="cube root function" ref_view="object">
      <xi:include href="math.cbrt.pddoc" parse="xml"/>
    </entry>
    <entry name="math.cbrt~" descr="cube root function for signals" ref_view="object">
      <xi:include href="math.cbrt~.pddoc" parse="xml"/>
    </entry>
    <entry name="math.cdiv~" descr="division of complex signals" ref_view="object">
      <xi:include href="math.cdiv~.pddoc" parse="xml"/>
    </entry>
    <entry name="math.ceil" descr="round to smallest integral value not less than input value" ref_view="object">
      <xi:include href="math.ceil.pddoc" parse="xml"/>
    </entry>
    <entry name="math.ceil~" descr="round to smallest integral value not less than input value" ref_view="object">
      <xi:include href="math.ceil~.pddoc" parse="xml"/>
    </entry>
    <entry name="math.cexp~" descr="exponent of a complex signals" ref_view="object">
      <xi:include href="math.cexp~.pddoc" parse="xml"/>
    </entry>
    <entry name="math.cmul~" descr="multiplication of complex signals" ref_view="object">
      <xi:include href="math.cmul~.pddoc" parse="xml"/>
    </entry>
    <entry name="math.cos" descr="cosine function" ref_view="object">
      <xi:include href="math.cos.pddoc" parse="xml"/>
    </entry>
    <entry name="math.cosh" descr="hyperbolic cosine function" ref_view="object">
      <xi:include href="math.cosh.pddoc" parse="xml"/>
    </entry>
    <entry name="math.cosh~" descr="hyperbolic cosine for signals" ref_view="object">
      <xi:include href="math.cosh~.pddoc" parse="xml"/>
    </entry>
    <entry name="math.cos~" descr="cosine function" ref_view="object">
      <xi:include href="math.cos~.pddoc" parse="xml"/>
    </entry>
    <entry name="math.div" descr="division (on lists too)" ref_view="object">
      <xi:include href="math.div.pddoc" parse="xml"/>
    </entry>
    <entry name="math.e" descr="mathematical constant, base of the natural logarithm" ref_view="object">
      <xi:include href="math.e.pddoc" parse="xml"/>
    </entry>
    <entry name="math.erf" descr="error function" ref_view="object">
      <xi:include href="math.erf.pddoc" parse="xml"/>
    </entry>
    <entry name="math.erf~" descr="error function for signals" ref_view="object">
      <xi:include href="math.erf~.pddoc" parse="xml"/>
    </entry>
    <entry name="math.exp" descr="exponential functions" ref_view="object">
      <xi:include href="math.exp.pddoc" parse="xml"/>
    </entry>
    <entry name="math.exp2" descr="exponential functions" ref_view="object">
      <xi:include href="math.exp2.pddoc" parse="xml"/>
    </entry>
    <entry name="math.exp2~" descr="base-2 exponential for signal" ref_view="object">
      <xi:include href="math.exp2~.pddoc" parse="xml"/>
    </entry>
    <entry name="math.expr" descr="dynamic [expr]" ref_view="object">
      <xi:include href="math.expr.pddoc" parse="xml"/>
    </entry>
    <entry name="math.exp~" descr="base-e exponential for signal" ref_view="object">
      <xi:include href="math.exp~.pddoc" parse="xml"/>
    </entry>
    <entry name="math.floor" descr="round to largest integral value not greater than x" ref_view="object">
      <xi:include href="math.floor.pddoc" parse="xml"/>
    </entry>
    <entry name="math.floor~" descr="round to largest integral value not greater than x" ref_view="object">
      <xi:include href="math.floor~.pddoc" parse="xml"/>
    </entry>
    <entry name="math.gamma" descr="gamma function" ref_view="object">
      <xi:include href="math.gamma.pddoc" parse="xml"/>
    </entry>
    <entry name="math.gamma~" descr="gamma function for floating point signals" ref_view="object">
      <xi:include href="math.gamma~.pddoc" parse="xml"/>
    </entry>
    <entry name="math.gcd" descr="calculate greatest common divisor" ref_view="object">
      <xi:include href="math.gcd.pddoc" parse="xml"/>
    </entry>
    <entry name="math.inf" descr="infinity value that cannot be represented accurately" ref_view="object">
      <xi:include href="math.inf.pddoc" parse="xml"/>
    </entry>
    <entry name="math.inf~" descr="inifinity signal generator" ref_view="object">
      <xi:include href="math.inf~.pddoc" parse="xml"/>
    </entry>
    <entry name="math.lcm" descr="calculate least common multiple" ref_view="object">
      <xi:include href="math.lcm.pddoc" parse="xml"/>
    </entry>
    <entry name="math.lgamma" descr="natural logarithm of the absolute value of the gamma function" ref_view="object">
      <xi:include href="math.lgamma.pddoc" parse="xml"/>
    </entry>
    <entry name="math.lgamma~" descr="natural logarithm of the absolute value of the gamma function for signals" ref_view="object">
      <xi:include href="math.lgamma~.pddoc" parse="xml"/>
    </entry>
    <entry name="math.log" descr="natural logarithm" ref_view="object">
      <xi:include href="math.log.pddoc" parse="xml"/>
    </entry>
    <entry name="math.log10" descr="logarithm functions" ref_view="object">
      <xi:include href="math.log10.pddoc" parse="xml"/>
    </entry>
    <entry name="math.log10~" descr="natural logarithm" ref_view="object">
      <xi:include href="math.log10~.pddoc" parse="xml"/>
    </entry>
    <entry name="math.log2" descr="logarithm functions" ref_view="object">
      <xi:include href="math.log2.pddoc" parse="xml"/>
    </entry>
    <entry name="math.log2~" descr="base-2 logarithm" ref_view="object">
      <xi:include href="math.log2~.pddoc" parse="xml"/>
    </entry>
    <entry name="math.log~" descr="natural logarithm" ref_view="object">
      <xi:include href="math.log~.pddoc" parse="xml"/>
    </entry>
    <entry name="math.mul" descr="multiplication (on lists too)" ref_view="object">
      <xi:include href="math.mul.pddoc" parse="xml"/>
    </entry>
    <entry name="math.nan" descr="Not a Number, unrepresentable value" ref_view="object">
      <xi:include href="math.nan.pddoc" parse="xml"/>
    </entry>
    <entry name="math.nan~" descr="signal NaN" ref_view="object">
      <xi:include href="math.nan~.pddoc" parse="xml"/>
    </entry>
    <entry name="math.neg" descr="negate function" ref_view="object">
      <xi:include href="math.neg.pddoc" parse="xml"/>
    </entry>
    <entry name="math.or" descr="operation OR for multiple arguments" ref_view="object">
      <xi:include href="math.or.pddoc" parse="xml"/>
    </entry>
    <entry name="math.pi" descr="mathematical constant" ref_view="object">
      <xi:include href="math.pi.pddoc" parse="xml"/>
    </entry>
    <entry name="math.pi~" descr="mathematical constant" ref_view="object">
      <xi:include href="math.pi~.pddoc" parse="xml"/>
    </entry>
    <entry name="math.polyeval" descr="evaluates the polynomial described by the coefficients list" ref_view="object">
      <xi:include href="math.polyeval.pddoc" parse="xml"/>
    </entry>
    <entry name="math.reciprocal" descr="calculate reciprocal number" ref_view="object">
      <xi:include href="math.reciprocal.pddoc" parse="xml"/>
    </entry>
    <entry name="math.reciprocal~" descr="calculate reciprocal number for signals" ref_view="object">
      <xi:include href="math.reciprocal~.pddoc" parse="xml"/>
    </entry>
    <entry name="math.round" descr="round to integral value, regardless of rounding direction" ref_view="object">
      <xi:include href="math.round.pddoc" parse="xml"/>
    </entry>
    <entry name="math.round~" descr="signal round" ref_view="object">
      <xi:include href="math.round~.pddoc" parse="xml"/>
    </entry>
    <entry name="math.sign" descr="sign function" ref_view="object">
      <xi:include href="math.sign.pddoc" parse="xml"/>
    </entry>
    <entry name="math.sin" descr="sine function" ref_view="object">
      <xi:include href="math.sin.pddoc" parse="xml"/>
    </entry>
    <entry name="math.sinh" descr="hyperbolic sine function" ref_view="object">
      <xi:include href="math.sinh.pddoc" parse="xml"/>
    </entry>
    <entry name="math.sinh~" descr="hyperbolic sine for signals" ref_view="object">
      <xi:include href="math.sinh~.pddoc" parse="xml"/>
    </entry>
    <entry name="math.sin~" descr="sine function" ref_view="object">
      <xi:include href="math.sin~.pddoc" parse="xml"/>
    </entry>
    <entry name="math.sqrt" descr="square root function" ref_view="object">
      <xi:include href="math.sqrt.pddoc" parse="xml"/>
    </entry>
    <entry name="math.sqrt~" descr="square root for signal" ref_view="object">
      <xi:include href="math.sqrt~.pddoc" parse="xml"/>
    </entry>
    <entry name="math.squared" descr="value square" ref_view="object">
      <xi:include href="math.squared.pddoc" parse="xml"/>
    </entry>
    <entry name="math.squared~" descr="signal value square" ref_view="object">
      <xi:include href="math.squared~.pddoc" parse="xml"/>
    </entry>
    <entry name="math.sync_add" descr="sync addition" ref_view="object">
      <xi:include href="math.sync_add.pddoc" parse="xml"/>
    </entry>
    <entry name="math.sync_and" descr="sync logical AND operation" ref_view="object">
      <xi:include href="math.sync_and.pddoc" parse="xml"/>
    </entry>
    <entry name="math.sync_div" descr="sync division" ref_view="object">
      <xi:include href="math.sync_div.pddoc" parse="xml"/>
    </entry>
    <entry name="math.sync_eq" descr="sync equal numbers check" ref_view="object">
      <xi:include href="math.sync_eq.pddoc" parse="xml"/>
    </entry>
    <entry name="math.sync_ge" descr="sync greater equal numbers compare" ref_view="object">
      <xi:include href="math.sync_ge.pddoc" parse="xml"/>
    </entry>
    <entry name="math.sync_gt" descr="sync greater then numbers compare" ref_view="object">
      <xi:include href="math.sync_gt.pddoc" parse="xml"/>
    </entry>
    <entry name="math.sync_le" descr="sync less equal numbers compare" ref_view="object">
      <xi:include href="math.sync_le.pddoc" parse="xml"/>
    </entry>
    <entry name="math.sync_lshift" descr="sync signed bit left shift" ref_view="object">
      <xi:include href="math.sync_lshift.pddoc" parse="xml"/>
    </entry>
    <entry name="math.sync_lt" descr="sync less then numbers compare" ref_view="object">
      <xi:include href="math.sync_lt.pddoc" parse="xml"/>
    </entry>
    <entry name="math.sync_mod" descr="sync remainder of modulo division (float or integer)" ref_view="object">
      <xi:include href="math.sync_mod.pddoc" parse="xml"/>
    </entry>
    <entry name="math.sync_mul" descr="sync multiplication" ref_view="object">
      <xi:include href="math.sync_mul.pddoc" parse="xml"/>
    </entry>
    <entry name="math.sync_ne" descr="sync numbers for not equality" ref_view="object">
      <xi:include href="math.sync_ne.pddoc" parse="xml"/>
    </entry>
    <entry name="math.sync_or" descr="sync logical OR operation" ref_view="object">
      <xi:include href="math.sync_or.pddoc" parse="xml"/>
    </entry>
    <entry name="math.sync_rshift" descr="sync signed bit right shift" ref_view="object">
      <xi:include href="math.sync_rshift.pddoc" parse="xml"/>
    </entry>
    <entry name="math.sync_sub" descr="sync subtraction" ref_view="object">
      <xi:include href="math.sync_sub.pddoc" parse="xml"/>
    </entry>
    <entry name="math.sync_xor" descr="sync logical XOR operation" ref_view="object">
      <xi:include href="math.sync_xor.pddoc" parse="xml"/>
    </entry>
    <entry name="math.tan" descr="tangent function" ref_view="object">
      <xi:include href="math.tan.pddoc" parse="xml"/>
    </entry>
    <entry name="math.tanh" descr="hyperbolic tangent function" ref_view="object">
      <xi:include href="math.tanh.pddoc" parse="xml"/>
    </entry>
    <entry name="math.tanh~" descr="hyperbolic tangent for signals" ref_view="object">
      <xi:include href="math.tanh~.pddoc" parse="xml"/>
    </entry>
    <entry name="math.tan~" descr="tangent function" ref_view="object">
      <xi:include href="math.tan~.pddoc" parse="xml"/>
    </entry>
    <entry name="math.trunc" descr="truncate to integer value" ref_view="object">
      <xi:include href="math.trunc.pddoc" parse="xml"/>
    </entry>
    <entry name="math.trunc~" descr="truncate to integer value" ref_view="object">
      <xi:include href="math.trunc~.pddoc" parse="xml"/>
    </entry>
    <xi:include href="ceammc_category_math.xml" parse="xml"/>
  </category>
  <category name="midi">
    <entry name="midi.arp" descr="MIDI arpeggiator" ref_view="object">
      <xi:include href="midi.arp.pddoc" parse="xml"/>
    </entry>
    <entry name="midi.cc" descr="enhanced version of vanilla ctlin" ref_view="object">
      <xi:include href="midi.cc.pddoc" parse="xml"/>
    </entry>
    <entry name="midi.clock" descr="midi clock toolbox" ref_view="object">
      <xi:include href="midi.clock.pddoc" parse="xml"/>
    </entry>
    <entry name="midi.ctl2str" descr="convert Standard MIDI Controllers number to name" ref_view="object">
      <xi:include href="midi.ctl2str.pddoc" parse="xml"/>
    </entry>
    <entry name="midi.event2ctl" descr="convert MidiEvent message to controller channel/value pair" ref_view="object">
      <xi:include href="midi.event2ctl.pddoc" parse="xml"/>
    </entry>
    <entry name="midi.event2note" descr="convert MidiEvent message to midi note/velocity pair" ref_view="object">
      <xi:include href="midi.event2note.pddoc" parse="xml"/>
    </entry>
    <entry name="midi.event2prg" descr="convert MidiEvent message to midi program change value" ref_view="object">
      <xi:include href="midi.event2prg.pddoc" parse="xml"/>
    </entry>
    <entry name="midi.file" descr="standard midi file SMF reader and writer" ref_view="object">
      <xi:include href="midi.file.pddoc" parse="xml"/>
    </entry>
    <entry name="midi.kbd" descr="computer keyboard midi" ref_view="object">
      <xi:include href="midi.kbd.pddoc" parse="xml"/>
    </entry>
    <entry name="midi.key2str" descr="convert key number to SPN name according to tonality" ref_view="object">
      <xi:include href="midi.key2str.pddoc" parse="xml"/>
    </entry>
    <entry name="midi.modus" descr="snap/skip midi pitches according modus" ref_view="object">
      <xi:include href="midi.modus.pddoc" parse="xml"/>
    </entry>
    <entry name="midi.note.pass" descr="midi note pass by expression" ref_view="object">
      <xi:include href="midi.note.pass.pddoc" parse="xml"/>
    </entry>
    <entry name="midi.oct" descr="midi octave transpose" ref_view="object">
      <xi:include href="midi.oct.pddoc" parse="xml"/>
    </entry>
    <entry name="midi.prg2str" descr="convert GM Instrument number to name (string or symbol)" ref_view="object">
      <xi:include href="midi.prg2str.pddoc" parse="xml"/>
    </entry>
    <entry name="midi.split" descr="midi note splitter" ref_view="object">
      <xi:include href="midi.split.pddoc" parse="xml"/>
    </entry>
    <entry name="midi.sustain" descr="sustain pedal emulation" ref_view="object">
      <xi:include href="midi.sustain.pddoc" parse="xml"/>
    </entry>
    <entry name="midi.sysex" descr="sysex input messages as list" ref_view="object">
      <xi:include href="midi.sysex.pddoc" parse="xml"/>
    </entry>
    <entry name="midi.track" descr="extract track from MidiFile" ref_view="object">
      <xi:include href="midi.track.pddoc" parse="xml"/>
    </entry>
    <entry name="midi.tuning" descr="apply tuning to midi messages" ref_view="object">
      <xi:include href="midi.tuning.pddoc" parse="xml"/>
    </entry>
    <entry name="midi.vramp" descr="apply crescendo or diminuendo for midi message flow" ref_view="object">
      <xi:include href="midi.vramp.pddoc" parse="xml"/>
    </entry>
    <entry name="midi.vrand" descr="midi velocity randomizer" ref_view="object">
      <xi:include href="midi.vrand.pddoc" parse="xml"/>
    </entry>
  </category>
  <category name="misc">
    <entry name="click~" descr="Output single impulse on bang" ref_view="object">
      <xi:include href="click~.pddoc" parse="xml"/>
    </entry>
    <entry name="fluid~" descr="FluidSynth SoundFont 2 player" ref_view="object">
      <xi:include href="fluid~.pddoc" parse="xml"/>
    </entry>
    <entry name="modplug~" descr="MOD file player (using libmodplug)" ref_view="object">
      <xi:include href="modplug~.pddoc" parse="xml"/>
    </entry>
    <entry name="qrcode" descr="QR code generator" ref_view="object">
      <xi:include href="qrcode.pddoc" parse="xml"/>
    </entry>
    <entry name="risset.gliss" descr="Sheppard/Risset glissando calculator" ref_view="object">
      <xi:include href="risset.gliss.pddoc" parse="xml"/>
    </entry>
    <entry name="sfizz~" descr="SFZ format sample player" ref_view="object">
      <xi:include href="sfizz~.pddoc" parse="xml"/>
    </entry>
    <entry name="speech.flite" descr="render speech to array" ref_view="object">
      <xi:include href="speech.flite.pddoc" parse="xml"/>
    </entry>
    <entry name="speech.flite~" descr="render speech to array" ref_view="object">
      <xi:include href="speech.flite~.pddoc" parse="xml"/>
    </entry>
    <entry name="speech.rhvoice~" descr="RHVoice text to speech synthesis" ref_view="object">
      <xi:include href="speech.rhvoice~.pddoc" parse="xml"/>
    </entry>
  </category>
  <category name="msg">
    <entry name="loadexpr" descr="send message when patch loads" ref_view="object">
      <xi:include href="loadexpr.pddoc" parse="xml"/>
    </entry>
    <entry name="msg" descr="message constructor" ref_view="object">
      <xi:include href="msg.pddoc" parse="xml"/>
    </entry>
    <entry name="msg.after" descr="send specified message after incoming message" ref_view="object">
      <xi:include href="msg.after.pddoc" parse="xml"/>
    </entry>
    <entry name="msg.onclose" descr="send message when patch closes" ref_view="object">
      <xi:include href="msg.onclose.pddoc" parse="xml"/>
    </entry>
    <entry name="msg.onload" descr="send message when patch loads" ref_view="object">
      <xi:include href="msg.onload.pddoc" parse="xml"/>
    </entry>
    <entry name="msg.pack" descr="message pack" ref_view="object">
      <xi:include href="msg.pack.pddoc" parse="xml"/>
    </entry>
    <entry name="msg.sched" descr="message scheduler" ref_view="object">
      <xi:include href="msg.sched.pddoc" parse="xml"/>
    </entry>
    <entry name="msg.unpack" descr="message unpack" ref_view="object">
      <xi:include href="msg.unpack.pddoc" parse="xml"/>
    </entry>
  </category>
  <category name="music">
    <entry name="rhythm.euclid" descr="euclid pattern generator" ref_view="object">
      <xi:include href="rhythm.euclid.pddoc" parse="xml"/>
    </entry>
    <entry name="rhythm.hexbeat" descr="hexbeat pattern generator" ref_view="object">
      <xi:include href="rhythm.hexbeat.pddoc" parse="xml"/>
    </entry>
    <entry name="rhythm.lsystem" descr="L-system pattern generator" ref_view="object">
      <xi:include href="rhythm.lsystem.pddoc" parse="xml"/>
    </entry>
  </category>
  <category name="net">
    <entry name="net.artnet.send" descr="ArtNet DMX message sender" ref_view="object">
      <xi:include href="net.artnet.send.pddoc" parse="xml"/>
    </entry>
    <entry name="net.freesound" descr="Freesound API v2 client" ref_view="object">
      <xi:include href="net.freesound.pddoc" parse="xml"/>
    </entry>
    <entry name="net.host2ip" descr="returns IP address by DNS name" ref_view="object">
      <xi:include href="net.host2ip.pddoc" parse="xml"/>
    </entry>
    <entry name="net.http.client" descr="HTTP client" ref_view="object">
      <xi:include href="net.http.client.pddoc" parse="xml"/>
    </entry>
    <entry name="net.http.send" descr="HTTP request sender" ref_view="object">
      <xi:include href="net.http.send.pddoc" parse="xml"/>
    </entry>
    <entry name="net.mdns" descr="MDNS service discovery" ref_view="object">
      <xi:include href="net.mdns.pddoc" parse="xml"/>
    </entry>
    <entry name="net.mqtt.client" descr="MQTT client" ref_view="object">
      <xi:include href="net.mqtt.client.pddoc" parse="xml"/>
    </entry>
    <entry name="net.osc.receive" descr="OSC message listener" ref_view="object">
      <xi:include href="net.osc.receive.pddoc" parse="xml"/>
    </entry>
    <entry name="net.osc.send" descr="OSC message sender" ref_view="object">
      <xi:include href="net.osc.send.pddoc" parse="xml"/>
    </entry>
    <entry name="net.osc.server" descr="OSC server control" ref_view="object">
      <xi:include href="net.osc.server.pddoc" parse="xml"/>
    </entry>
    <entry name="net.ws.client" descr="Websocket client" ref_view="object">
      <xi:include href="net.ws.client.pddoc" parse="xml"/>
    </entry>
    <entry name="net.ws.server" descr="Websocket server" ref_view="object">
      <xi:include href="net.ws.server.pddoc" parse="xml"/>
    </entry>
  </category>
  <category name="noise">
    <entry name="noise.baker" descr="Part of a-chaos library" ref_view="object">
      <xi:include href="noise.baker.pddoc" parse="xml"/>
    </entry>
    <entry name="noise.clifford" descr="clifford attractor" ref_view="object">
      <xi:include href="noise.clifford.pddoc" parse="xml"/>
    </entry>
    <entry name="noise.collatz" descr="collatz conjecture output" ref_view="object">
      <xi:include href="noise.collatz.pddoc" parse="xml"/>
    </entry>
    <entry name="noise.colored~" descr="colored noise generator with an arbitrary spectral roll" ref_view="object">
      <xi:include href="noise.colored~.pddoc" parse="xml"/>
    </entry>
    <entry name="noise.crackle~" descr="sparse noise generator" ref_view="object">
      <xi:include href="noise.crackle~.pddoc" parse="xml"/>
    </entry>
    <entry name="noise.duffing" descr="duffing attractor" ref_view="object">
      <xi:include href="noise.duffing.pddoc" parse="xml"/>
    </entry>
    <entry name="noise.ginger" descr="Gingerbreadman map chaotic generator" ref_view="object">
      <xi:include href="noise.ginger.pddoc" parse="xml"/>
    </entry>
    <entry name="noise.henon" descr="henon attractor" ref_view="object">
      <xi:include href="noise.henon.pddoc" parse="xml"/>
    </entry>
    <entry name="noise.henon_heilles" descr="Hénon–Heiles_system" ref_view="object">
      <xi:include href="noise.henon_heilles.pddoc" parse="xml"/>
    </entry>
    <entry name="noise.henon_phase" descr="henon phase Ddagrams" ref_view="object">
      <xi:include href="noise.henon_phase.pddoc" parse="xml"/>
    </entry>
    <entry name="noise.henonf" descr="Henon phase" ref_view="object">
      <xi:include href="noise.henonf.pddoc" parse="xml"/>
    </entry>
    <entry name="noise.ikeda" descr="Ikeda attractor" ref_view="object">
      <xi:include href="noise.ikeda.pddoc" parse="xml"/>
    </entry>
    <entry name="noise.lfreq0~" descr="sampled/held noise (piecewise constant)" ref_view="object">
      <xi:include href="noise.lfreq0~.pddoc" parse="xml"/>
    </entry>
    <entry name="noise.lfreq~" descr="noise.lfreq0~ smoothed with no overshoot" ref_view="object">
      <xi:include href="noise.lfreq~.pddoc" parse="xml"/>
    </entry>
    <entry name="noise.lorenz" descr="Lorenz chaos" ref_view="object">
      <xi:include href="noise.lorenz.pddoc" parse="xml"/>
    </entry>
    <entry name="noise.lyapunov" descr="lyapunov random attractor" ref_view="object">
      <xi:include href="noise.lyapunov.pddoc" parse="xml"/>
    </entry>
    <entry name="noise.navier_stokes" descr="navier-stokes diff equations" ref_view="object">
      <xi:include href="noise.navier_stokes.pddoc" parse="xml"/>
    </entry>
    <entry name="noise.pink~" descr="Pink noise generator" ref_view="object">
      <xi:include href="noise.pink~.pddoc" parse="xml"/>
    </entry>
    <entry name="noise.rossler" descr="Rössler attractor" ref_view="object">
      <xi:include href="noise.rossler.pddoc" parse="xml"/>
    </entry>
    <entry name="noise.stein" descr="Stein distribution" ref_view="object">
      <xi:include href="noise.stein.pddoc" parse="xml"/>
    </entry>
    <entry name="noise.torus" descr="torus attractor" ref_view="object">
      <xi:include href="noise.torus.pddoc" parse="xml"/>
    </entry>
    <entry name="noise.verhulst" descr="verhulst distribution" ref_view="object">
      <xi:include href="noise.verhulst.pddoc" parse="xml"/>
    </entry>
    <entry name="noise.white~" descr="White noise generator" ref_view="object">
      <xi:include href="noise.white~.pddoc" parse="xml"/>
    </entry>
  </category>
  <category name="osc">
    <entry name="osc.blit~" descr="Bandlimited impulse train oscillator" ref_view="object">
      <xi:include href="osc.blit~.pddoc" parse="xml"/>
    </entry>
    <entry name="osc.impulse~" descr="Bandlimited impulse train generator" ref_view="object">
      <xi:include href="osc.impulse~.pddoc" parse="xml"/>
    </entry>
    <entry name="osc.pulse~" descr="Bandlimited pulse train oscillator" ref_view="object">
      <xi:include href="osc.pulse~.pddoc" parse="xml"/>
    </entry>
    <entry name="osc.saw4~" descr="Bandlimited sawtooth wave" ref_view="object">
      <xi:include href="osc.saw4~.pddoc" parse="xml"/>
    </entry>
    <entry name="osc.saw~" descr="Alias-free sawtooth wave" ref_view="object">
      <xi:include href="osc.saw~.pddoc" parse="xml"/>
    </entry>
    <entry name="osc.sinfb~" descr="Sine oscilator with feedback" ref_view="object">
      <xi:include href="osc.sinfb~.pddoc" parse="xml"/>
    </entry>
    <entry name="osc.sin~" descr="Sine wave oscillator" ref_view="object">
      <xi:include href="osc.sin~.pddoc" parse="xml"/>
    </entry>
    <entry name="osc.square~" descr="Bandlimited square wave oscillator" ref_view="object">
      <xi:include href="osc.square~.pddoc" parse="xml"/>
    </entry>
    <entry name="osc.tri~" descr="Bandlimited triangle wave oscillator" ref_view="object">
      <xi:include href="osc.tri~.pddoc" parse="xml"/>
    </entry>
  </category>
  <category name="patch">
    <entry name="canvas.active" descr="checks if canvas window is on top and active" ref_view="object">
      <xi:include href="canvas.active.pddoc" parse="xml"/>
    </entry>
    <entry name="canvas.current" descr="verbose information about current canvas" ref_view="object">
      <xi:include href="canvas.current.pddoc" parse="xml"/>
    </entry>
    <entry name="canvas.dir" descr="current canvas directory and nesting level" ref_view="object">
      <xi:include href="canvas.dir.pddoc" parse="xml"/>
    </entry>
    <entry name="canvas.name" descr="current canvas name" ref_view="object">
      <xi:include href="canvas.name.pddoc" parse="xml"/>
    </entry>
    <entry name="canvas.path" descr="current canvas fullpath" ref_view="object">
      <xi:include href="canvas.path.pddoc" parse="xml"/>
    </entry>
    <entry name="canvas.top" descr="verbose information about top-level canvas" ref_view="object">
      <xi:include href="canvas.top.pddoc" parse="xml"/>
    </entry>
    <entry name="patch.args" descr="Get patch or subpatch arguments" ref_view="object">
      <xi:include href="patch.args.pddoc" parse="xml"/>
    </entry>
    <entry name="patch.deps" descr="patch dependencies: used objects and abstractions" ref_view="object">
      <xi:include href="patch.deps.pddoc" parse="xml"/>
    </entry>
    <entry name="patch.tree" descr="patch tree" ref_view="object">
      <xi:include href="patch.tree.pddoc" parse="xml"/>
    </entry>
  </category>
  <category name="path">
    <entry name="file.size" descr="output file size" ref_view="object">
      <xi:include href="file.size.pddoc" parse="xml"/>
    </entry>
    <entry name="path.basename" descr="outputs filename portion of pathname" ref_view="object">
      <xi:include href="path.basename.pddoc" parse="xml"/>
    </entry>
    <entry name="path.dirname" descr="outputs directory portion of pathname" ref_view="object">
      <xi:include href="path.dirname.pddoc" parse="xml"/>
    </entry>
    <entry name="path.exists" descr="checks if given path exists" ref_view="object">
      <xi:include href="path.exists.pddoc" parse="xml"/>
    </entry>
    <entry name="path.file" descr="file input/output" ref_view="object">
      <xi:include href="path.file.pddoc" parse="xml"/>
    </entry>
    <entry name="path.is_dir" descr="check if path is directory" ref_view="object">
      <xi:include href="path.is_dir.pddoc" parse="xml"/>
    </entry>
    <entry name="path.lsdir" descr="list directory contents" ref_view="object">
      <xi:include href="path.lsdir.pddoc" parse="xml"/>
    </entry>
    <entry name="path.monitor" descr="filesystem event monitor" ref_view="object">
      <xi:include href="path.monitor.pddoc" parse="xml"/>
    </entry>
    <entry name="path.normalize" descr="normalize file paths" ref_view="object">
      <xi:include href="path.normalize.pddoc" parse="xml"/>
    </entry>
    <entry name="path.pattern" descr="pattern filename generator" ref_view="object">
      <xi:include href="path.pattern.pddoc" parse="xml"/>
    </entry>
    <entry name="path.search" descr="file search" ref_view="object">
      <xi:include href="path.search.pddoc" parse="xml"/>
    </entry>
    <entry name="path.split" descr="file path split" ref_view="object">
      <xi:include href="path.split.pddoc" parse="xml"/>
    </entry>
  </category>
  <category name="predicates">
    <entry name="is_any" descr="checks if input data has *any* type" ref_view="object">
      <xi:include href="is_any.pddoc" parse="xml"/>
    </entry>
    <entry name="is_bang" descr="checks if input data has *bang* type" ref_view="object">
      <xi:include href="is_bang.pddoc" parse="xml"/>
    </entry>
    <entry name="is_data" descr="checks if input data has *data* type" ref_view="object">
      <xi:include href="is_data.pddoc" parse="xml"/>
    </entry>
    <entry name="is_dict" descr="checks if input data has *dict* type" ref_view="object">
      <xi:include href="is_dict.pddoc" parse="xml"/>
    </entry>
    <entry name="is_even" descr="checks if input number is even" ref_view="object">
      <xi:include href="is_even.pddoc" parse="xml"/>
    </entry>
    <entry name="is_file" descr="checks if file exists and accessible" ref_view="object">
      <xi:include href="is_file.pddoc" parse="xml"/>
    </entry>
    <entry name="is_float" descr="checks if input data has *float* type" ref_view="object">
      <xi:include href="is_float.pddoc" parse="xml"/>
    </entry>
    <entry name="is_list" descr="checks if input data has *list* type" ref_view="object">
      <xi:include href="is_list.pddoc" parse="xml"/>
    </entry>
    <entry name="is_odd" descr="checks if input number is odd" ref_view="object">
      <xi:include href="is_odd.pddoc" parse="xml"/>
    </entry>
    <entry name="is_pointer" descr="checks if input data has *pointer* type" ref_view="object">
      <xi:include href="is_pointer.pddoc" parse="xml"/>
    </entry>
    <entry name="is_prop" descr="checks if input message is *property* message" ref_view="object">
      <xi:include href="is_prop.pddoc" parse="xml"/>
    </entry>
    <entry name="is_symbol" descr="checks if input data has *symbol* type" ref_view="object">
      <xi:include href="is_symbol.pddoc" parse="xml"/>
    </entry>
  </category>
  <category name="preset">
    <entry name="preset.float" descr="load/store float preset" ref_view="object">
      <xi:include href="preset.float.pddoc" parse="xml"/>
    </entry>
    <entry name="preset.list" descr="load/store symbol preset" ref_view="object">
      <xi:include href="preset.list.pddoc" parse="xml"/>
    </entry>
    <entry name="preset.storage" descr="preset storage control" ref_view="object">
      <xi:include href="preset.storage.pddoc" parse="xml"/>
    </entry>
    <entry name="preset.symbol" descr="load/store symbol preset" ref_view="object">
      <xi:include href="preset.symbol.pddoc" parse="xml"/>
    </entry>
  </category>
  <category name="property">
    <entry name="patch.props" descr="patch properties manager" ref_view="object">
      <xi:include href="patch.props.pddoc" parse="xml"/>
    </entry>
    <entry name="prop" descr="get/set named property value for subpatch or abstraction" ref_view="object">
      <xi:include href="prop.pddoc" parse="xml"/>
    </entry>
    <entry name="prop.declare" descr="declare named property for subpatch or abstraction" ref_view="object">
      <xi:include href="prop.declare.pddoc" parse="xml"/>
    </entry>
    <entry name="prop.get" descr="get property from connected object/subpatch/abstraction" ref_view="object">
      <xi:include href="prop.get.pddoc" parse="xml"/>
    </entry>
    <entry name="prop.join" descr="join property to main data flow" ref_view="object">
      <xi:include href="prop.join.pddoc" parse="xml"/>
    </entry>
    <entry name="prop.random" descr="property randomizer" ref_view="object">
      <xi:include href="prop.random.pddoc" parse="xml"/>
    </entry>
    <entry name="prop.route" descr="separate properties from dataflow" ref_view="object">
      <xi:include href="prop.route.pddoc" parse="xml"/>
    </entry>
    <entry name="prop.route~" descr="Property extractor from audio streams" ref_view="object">
      <xi:include href="prop.route~.pddoc" parse="xml"/>
    </entry>
    <entry name="prop.set" descr="set property for connected object/subpatch/abstraction" ref_view="object">
      <xi:include href="prop.set.pddoc" parse="xml"/>
    </entry>
  </category>
  <category name="proto">
    <entry name="proto.arturia.minilab" descr="simple SysEx control for Arturia MiniLab" ref_view="object">
      <xi:include href="proto.arturia.minilab.pddoc" parse="xml"/>
    </entry>
    <entry name="proto.feelworld" descr="protocol for FeelWorld LivePro L1 HDMI mixer" ref_view="object">
      <xi:include href="proto.feelworld.pddoc" parse="xml"/>
    </entry>
    <entry name="proto.firmata" descr="Firmata Arduino protocol support" ref_view="object">
      <xi:include href="proto.firmata.pddoc" parse="xml"/>
    </entry>
    <entry name="proto.inscore" descr="INScore message creator" ref_view="object">
      <xi:include href="proto.inscore.pddoc" parse="xml"/>
    </entry>
    <entry name="proto.ltc.in~" descr="LTC decoder" ref_view="object">
      <xi:include href="proto.ltc.in~.pddoc" parse="xml"/>
    </entry>
    <entry name="proto.ltc.out~" descr="LTC encoder" ref_view="object">
      <xi:include href="proto.ltc.out~.pddoc" parse="xml"/>
    </entry>
    <entry name="proto.midi" descr="raw midi encoder/parser" ref_view="object">
      <xi:include href="proto.midi.pddoc" parse="xml"/>
    </entry>
    <entry name="proto.midi.casio" descr="Casio Privia MIDI control" ref_view="object">
      <xi:include href="proto.midi.casio.pddoc" parse="xml"/>
    </entry>
    <entry name="proto.midi.cc" descr="raw midi CC encoder/parser" ref_view="object">
      <xi:include href="proto.midi.cc.pddoc" parse="xml"/>
    </entry>
    <entry name="proto.midi.sysex" descr="raw midi SYSex encoder/parser" ref_view="object">
      <xi:include href="proto.midi.sysex.pddoc" parse="xml"/>
    </entry>
    <entry name="proto.moppy" descr="protocol for Musical flOPPY controller" ref_view="object">
      <xi:include href="proto.moppy.pddoc" parse="xml"/>
    </entry>
    <entry name="proto.morse" descr="Morse encoder" ref_view="object">
      <xi:include href="proto.morse.pddoc" parse="xml"/>
    </entry>
    <entry name="proto.mpv" descr="mpv video player control" ref_view="object">
      <xi:include href="proto.mpv.pddoc" parse="xml"/>
    </entry>
    <entry name="proto.obs" descr="OBS studio Web-Socket client" ref_view="object">
      <xi:include href="proto.obs.pddoc" parse="xml"/>
    </entry>
    <entry name="proto.sp.alpaca" descr="protocol parser for Arduino-based CEAMMC footswitch" ref_view="object">
      <xi:include href="proto.sp.alpaca.pddoc" parse="xml"/>
    </entry>
    <entry name="proto.vlc" descr="VLC video player control over HTTP" ref_view="object">
      <xi:include href="proto.vlc.pddoc" parse="xml"/>
    </entry>
    <entry name="proto.whammy" descr="Control for Digitech Whammy pedal" ref_view="object">
      <xi:include href="proto.whammy.pddoc" parse="xml"/>
    </entry>
    <entry name="proto.xtouch_ext" descr="Behringer XTouch Extender XMidi protocol" ref_view="object">
      <xi:include href="proto.xtouch_ext.pddoc" parse="xml"/>
    </entry>
  </category>
  <category name="random">
    <entry name="random.atom" descr="weighted atom generation from specified list" ref_view="object">
      <xi:include href="random.atom.pddoc" parse="xml"/>
    </entry>
    <entry name="random.discrete" descr="random weighted integers on interval [0, n)" ref_view="object">
      <xi:include href="random.discrete.pddoc" parse="xml"/>
    </entry>
    <entry name="random.float" descr="uniform random float generator in specified range" ref_view="object">
      <xi:include href="random.float.pddoc" parse="xml"/>
    </entry>
    <entry name="random.gauss" descr="gaussian random distribution" ref_view="object">
      <xi:include href="random.gauss.pddoc" parse="xml"/>
    </entry>
    <entry name="random.int" descr="uniform random integer generator in specified range" ref_view="object">
      <xi:include href="random.int.pddoc" parse="xml"/>
    </entry>
    <entry name="random.linear" descr="random linear distribution" ref_view="object">
      <xi:include href="random.linear.pddoc" parse="xml"/>
    </entry>
    <entry name="random.pw_const" descr="piecewise constant random distribution" ref_view="object">
      <xi:include href="random.pw_const.pddoc" parse="xml"/>
    </entry>
    <entry name="random.pw_lin" descr="piecewise linear random distribution" ref_view="object">
      <xi:include href="random.pw_lin.pddoc" parse="xml"/>
    </entry>
  </category>
  <category name="samp">
    <entry name="samp.time~" descr="sample counter" ref_view="object">
      <xi:include href="samp.time~.pddoc" parse="xml"/>
    </entry>
  </category>
  <category name="seq">
    <entry name="seq.arp" descr="sequence arpeggiator" ref_view="object">
      <xi:include href="seq.arp.pddoc" parse="xml"/>
    </entry>
    <entry name="seq.bangs" descr="bang sequencer" ref_view="object">
      <xi:include href="seq.bangs.pddoc" parse="xml"/>
    </entry>
    <entry name="seq.counter" descr="sequencer counter" ref_view="object">
      <xi:include href="seq.counter.pddoc" parse="xml"/>
    </entry>
    <entry name="seq.life" descr="Conway game of life sequencer" ref_view="object">
      <xi:include href="seq.life.pddoc" parse="xml"/>
    </entry>
    <entry name="seq.matrix" descr="sequencer control for ui.matrix" ref_view="object">
      <xi:include href="seq.matrix.pddoc" parse="xml"/>
    </entry>
    <entry name="seq.nbangs" descr="output specified number of bang with time intervals" ref_view="object">
      <xi:include href="seq.nbangs.pddoc" parse="xml"/>
    </entry>
    <entry name="seq.phasor" descr="control rate phasor (saw) generator" ref_view="object">
      <xi:include href="seq.phasor.pddoc" parse="xml"/>
    </entry>
    <entry name="seq.toggles" descr="toggle sequencer" ref_view="object">
      <xi:include href="seq.toggles.pddoc" parse="xml"/>
    </entry>
    <entry name="sequencer" descr="basic sequence player" ref_view="object">
      <xi:include href="sequencer.pddoc" parse="xml"/>
    </entry>
  </category>
  <category name="snd">
    <entry name="snd.file" descr="Sound file loader on steroids" ref_view="object">
      <xi:include href="snd.file.pddoc" parse="xml"/>
    </entry>
    <entry name="snd.play~" descr="Sound file player on steriods" ref_view="object">
      <xi:include href="snd.play~.pddoc" parse="xml"/>
    </entry>
  </category>
  <category name="spat">
    <entry name="hoa.2d.decoder~" descr="hoa 2d decoder" ref_view="object">
      <xi:include href="hoa.2d.decoder~.pddoc" parse="xml"/>
    </entry>
    <entry name="hoa.2d.encoder~" descr="hoa 2d encoder" ref_view="object">
      <xi:include href="hoa.2d.encoder~.pddoc" parse="xml"/>
    </entry>
    <entry name="hoa.2d.exchanger~" descr="renumbers and normalizes the channels" ref_view="object">
      <xi:include href="hoa.2d.exchanger~.pddoc" parse="xml"/>
    </entry>
    <entry name="hoa.2d.map~" descr="a 2d ambisonic multisource spatializer" ref_view="object">
      <xi:include href="hoa.2d.map~.pddoc" parse="xml"/>
    </entry>
    <entry name="hoa.2d.optim~" descr="a 2D ambisonic optimization tool" ref_view="object">
      <xi:include href="hoa.2d.optim~.pddoc" parse="xml"/>
    </entry>
    <entry name="hoa.2d.projector~" descr="a plane waves decomposer from circular harmonics domain" ref_view="object">
      <xi:include href="hoa.2d.projector~.pddoc" parse="xml"/>
    </entry>
    <entry name="hoa.2d.recomposer~" descr="recomposes a 2d plane wave decomposition into circular harmonics" ref_view="object">
      <xi:include href="hoa.2d.recomposer~.pddoc" parse="xml"/>
    </entry>
    <entry name="hoa.2d.rotate~" descr="a 2D ambisonic sound field rotation" ref_view="object">
      <xi:include href="hoa.2d.rotate~.pddoc" parse="xml"/>
    </entry>
    <entry name="hoa.2d.space" descr="planewaves amp control" ref_view="link">
      <xi:include href="hoa.2d.space.pddoc" parse="xml"/>
    </entry>
    <entry name="hoa.2d.wider~" descr="a 2d fractional ambisonic order simulator" ref_view="object">
      <xi:include href="hoa.2d.wider~.pddoc" parse="xml"/>
    </entry>
    <entry name="hoa.3d.decoder~" descr="hoa 3d decoder" ref_view="object">
      <xi:include href="hoa.3d.decoder~.pddoc" parse="xml"/>
    </entry>
    <entry name="hoa.3d.encoder~" descr="hoa 3d encoder" ref_view="object">
      <xi:include href="hoa.3d.encoder~.pddoc" parse="xml"/>
    </entry>
    <entry name="hoa.3d.exchanger~" descr="renumbers and normalizes the channels" ref_view="object">
      <xi:include href="hoa.3d.exchanger~.pddoc" parse="xml"/>
    </entry>
    <entry name="hoa.3d.map~" descr="a 3d ambisonic multisource spatializer" ref_view="object">
      <xi:include href="hoa.3d.map~.pddoc" parse="xml"/>
    </entry>
    <entry name="hoa.3d.meter~" descr="multi spherical meter with sound field descriptor" ref_view="link">
      <xi:include href="hoa.3d.meter~.pddoc" parse="xml"/>
    </entry>
    <entry name="hoa.3d.optim~" descr="a 3D ambisonic optimization tool" ref_view="object">
      <xi:include href="hoa.3d.optim~.pddoc" parse="xml"/>
    </entry>
    <entry name="hoa.3d.scope~" descr="a 3d ambisonic harmonic scope" ref_view="link">
      <xi:include href="hoa.3d.scope~.pddoc" parse="xml"/>
    </entry>
    <entry name="hoa.3d.wider~" descr="a 3d fractional ambisonic order simulator" ref_view="object">
      <xi:include href="hoa.3d.wider~.pddoc" parse="xml"/>
    </entry>
    <entry name="hoa.@process" descr="process properties manager for hoa.process~" ref_view="object">
      <xi:include href="hoa.%40process.pddoc" parse="xml"/>
    </entry>
    <entry name="hoa.in" descr="message inlet for a patcher loaded by hoa.process~" ref_view="object">
      <xi:include href="hoa.in.pddoc" parse="xml"/>
    </entry>
    <entry name="hoa.in~" descr="signal inlet for a patcher loaded by hoa.process~" ref_view="object">
      <xi:include href="hoa.in~.pddoc" parse="xml"/>
    </entry>
    <entry name="hoa.map.ui" descr="a GUI to spatialize sources on a map" ref_view="link">
      <xi:include href="hoa.map.ui.pddoc" parse="xml"/>
    </entry>
    <entry name="hoa.out" descr="message outlet for a patcher loaded by hoa.process~" ref_view="object">
      <xi:include href="hoa.out.pddoc" parse="xml"/>
    </entry>
    <entry name="hoa.out~" descr="signal inlet for a patcher loaded by hoa.process~" ref_view="object">
      <xi:include href="hoa.out~.pddoc" parse="xml"/>
    </entry>
    <entry name="hoa.process~" descr="patcher loader for multichannel processing" ref_view="object">
      <xi:include href="hoa.process~.pddoc" parse="xml"/>
    </entry>
    <entry name="hoa.scope~" descr="a 2d ambisonic harmonic scope" ref_view="link">
      <xi:include href="hoa.scope~.pddoc" parse="xml"/>
    </entry>
    <entry name="pan.cos~" descr="two channel equal power sine/cosine panner" ref_view="object">
      <xi:include href="pan.cos~.pddoc" parse="xml"/>
    </entry>
    <entry name="pan.linsig~" descr="two channel linear panner with signal control" ref_view="object">
      <xi:include href="pan.linsig~.pddoc" parse="xml"/>
    </entry>
    <entry name="pan.lin~" descr="two channel linear panner" ref_view="object">
      <xi:include href="pan.lin~.pddoc" parse="xml"/>
    </entry>
    <entry name="pan.spread~" descr="spreads input channels across the stereo field" ref_view="object">
      <xi:include href="pan.spread~.pddoc" parse="xml"/>
    </entry>
    <entry name="pan.sqrt~" descr="two channel equal power square root panner" ref_view="object">
      <xi:include href="pan.sqrt~.pddoc" parse="xml"/>
    </entry>
    <entry name="spat.pan4~" descr="GMEM SPAT: 4-outputs spatializer" ref_view="object">
      <xi:include href="spat.pan4~.pddoc" parse="xml"/>
    </entry>
    <entry name="spat.pan8~" descr="GMEM SPAT: 8-outputs spatializer" ref_view="object">
      <xi:include href="spat.pan8~.pddoc" parse="xml"/>
    </entry>
    <entry name="spat.zita6x8~" descr="spat with 6 inputs sources to 8 channel output" ref_view="object">
      <xi:include href="spat.zita6x8~.pddoc" parse="xml"/>
    </entry>
    <entry name="spat.zita8~" descr="8 channel reverb spatializer" ref_view="object">
      <xi:include href="spat.zita8~.pddoc" parse="xml"/>
    </entry>
  </category>
  <category name="string">
    <entry name="string" descr="string constructor" ref_view="object">
      <xi:include href="string.pddoc" parse="xml"/>
    </entry>
    <entry name="string.contains" descr="checks if string contains specified substring" ref_view="object">
      <xi:include href="string.contains.pddoc" parse="xml"/>
    </entry>
    <entry name="string.ends_with" descr="checks if string ends with specified substring" ref_view="object">
      <xi:include href="string.ends_with.pddoc" parse="xml"/>
    </entry>
    <entry name="string.equal" descr="check strings or symbols for equality" ref_view="object">
      <xi:include href="string.equal.pddoc" parse="xml"/>
    </entry>
    <entry name="string.format" descr="formats string like printf." ref_view="object">
      <xi:include href="string.format.pddoc" parse="xml"/>
    </entry>
    <entry name="string.join" descr="joins (concatenates) list to string with separator" ref_view="object">
      <xi:include href="string.join.pddoc" parse="xml"/>
    </entry>
    <entry name="string.length" descr="number of characters in string (unicode supported)" ref_view="object">
      <xi:include href="string.length.pddoc" parse="xml"/>
    </entry>
    <entry name="string.match" descr="check if string match regular expression" ref_view="object">
      <xi:include href="string.match.pddoc" parse="xml"/>
    </entry>
    <entry name="string.remove" descr="remove substring from input string" ref_view="object">
      <xi:include href="string.remove.pddoc" parse="xml"/>
    </entry>
    <entry name="string.replace" descr="replace from one substring to another in input string" ref_view="object">
      <xi:include href="string.replace.pddoc" parse="xml"/>
    </entry>
    <entry name="string.split" descr="split string or symbol by separator" ref_view="object">
      <xi:include href="string.split.pddoc" parse="xml"/>
    </entry>
    <entry name="string.starts_with" descr="checks if string starts with specified substring" ref_view="object">
      <xi:include href="string.starts_with.pddoc" parse="xml"/>
    </entry>
    <entry name="string.substr" descr="extract substring from input string" ref_view="object">
      <xi:include href="string.substr.pddoc" parse="xml"/>
    </entry>
    <entry name="string2symbol" descr="converts string to symbol" ref_view="object">
      <xi:include href="string2symbol.pddoc" parse="xml"/>
    </entry>
  </category>
  <category name="symbol">
    <entry name="symbol.equal" descr="check symbols for equality" ref_view="object">
      <xi:include href="symbol.equal.pddoc" parse="xml"/>
    </entry>
    <entry name="symbol.length" descr="number of characters in symbol (unicode supported)" ref_view="object">
      <xi:include href="symbol.length.pddoc" parse="xml"/>
    </entry>
    <entry name="symbol.num_compare" descr="numeric symbol compare" ref_view="object">
      <xi:include href="symbol.num_compare.pddoc" parse="xml"/>
    </entry>
    <entry name="symbol2any" descr="converts symbol or string to message" ref_view="object">
      <xi:include href="symbol2any.pddoc" parse="xml"/>
    </entry>
    <entry name="symbol2intlist" descr="converts symbol to list of character codes" ref_view="object">
      <xi:include href="symbol2intlist.pddoc" parse="xml"/>
    </entry>
  </category>
  <category name="synth">
    <entry name="noise.chua~" descr="Chua's diode circuit" ref_view="object">
      <xi:include href="noise.chua~.pddoc" parse="xml"/>
    </entry>
    <entry name="synth.bee3~" descr="Hammond-oid organ FM synthesis instrument" ref_view="object">
      <xi:include href="synth.bee3~.pddoc" parse="xml"/>
    </entry>
    <entry name="synth.birds~" descr="bird singing generator" ref_view="object">
      <xi:include href="synth.birds~.pddoc" parse="xml"/>
    </entry>
    <entry name="synth.church_bell~" descr="generic church bell modal model" ref_view="object">
      <xi:include href="synth.church_bell~.pddoc" parse="xml"/>
    </entry>
    <entry name="synth.clap~" descr="clap synth from faust libraries" ref_view="object">
      <xi:include href="synth.clap~.pddoc" parse="xml"/>
    </entry>
    <entry name="synth.dubdub~" descr="simple synth based on a sawtooth wave filtered by a resonant lowpass" ref_view="object">
      <xi:include href="synth.dubdub~.pddoc" parse="xml"/>
    </entry>
    <entry name="synth.dx7~" descr="FAUST dx7 implementation" ref_view="object">
      <xi:include href="synth.dx7~.pddoc" parse="xml"/>
    </entry>
    <entry name="synth.eguitar~" descr="simple electric guitar model with steel strings" ref_view="object">
      <xi:include href="synth.eguitar~.pddoc" parse="xml"/>
    </entry>
    <entry name="synth.english_bell~" descr="english church bell modal model" ref_view="object">
      <xi:include href="synth.english_bell~.pddoc" parse="xml"/>
    </entry>
    <entry name="synth.fgrain~" descr="file granulator from STK" ref_view="object">
      <xi:include href="synth.fgrain~.pddoc" parse="xml"/>
    </entry>
    <entry name="synth.french_bell~" descr="french church bell modal model" ref_view="object">
      <xi:include href="synth.french_bell~.pddoc" parse="xml"/>
    </entry>
    <entry name="synth.german_bell~" descr="german church bell modal model" ref_view="object">
      <xi:include href="synth.german_bell~.pddoc" parse="xml"/>
    </entry>
    <entry name="synth.glass_harm~" descr="nonlinear banded waveguide modeled Glass Harmonica" ref_view="object">
      <xi:include href="synth.glass_harm~.pddoc" parse="xml"/>
    </entry>
    <entry name="synth.glitch~" descr="Glitch synthesizer by naivesound" ref_view="object">
      <xi:include href="synth.glitch~.pddoc" parse="xml"/>
    </entry>
    <entry name="synth.harpsichord~" descr="waveguide commuted harpsichord" ref_view="object">
      <xi:include href="synth.harpsichord~.pddoc" parse="xml"/>
    </entry>
    <entry name="synth.hat~" descr="hi-hat synth from faust librariest" ref_view="object">
      <xi:include href="synth.hat~.pddoc" parse="xml"/>
    </entry>
    <entry name="synth.kick2~" descr="low-kick synth from faust librariest" ref_view="object">
      <xi:include href="synth.kick2~.pddoc" parse="xml"/>
    </entry>
    <entry name="synth.kick~" descr="low-kick synth from Guitarix project" ref_view="object">
      <xi:include href="synth.kick~.pddoc" parse="xml"/>
    </entry>
    <entry name="synth.ks~" descr="Karplus-Strong string" ref_view="object">
      <xi:include href="synth.ks~.pddoc" parse="xml"/>
    </entry>
    <entry name="synth.marimba~" descr="simple marimba physical model implementing a single tone bar connected to tube" ref_view="object">
      <xi:include href="synth.marimba~.pddoc" parse="xml"/>
    </entry>
    <entry name="synth.metro~" descr="ready to use metronome synth" ref_view="object">
      <xi:include href="synth.metro~.pddoc" parse="xml"/>
    </entry>
    <entry name="synth.piano~" descr="waveguide commuted piano" ref_view="object">
      <xi:include href="synth.piano~.pddoc" parse="xml"/>
    </entry>
    <entry name="synth.rhodey~" descr="STK Fender Rhodes electric piano FM synthesis instrument" ref_view="object">
      <xi:include href="synth.rhodey~.pddoc" parse="xml"/>
    </entry>
    <entry name="synth.risset_arp~" descr="Jean Claude Risset's harmonic arpeggio effect" ref_view="object">
      <xi:include href="synth.risset_arp~.pddoc" parse="xml"/>
    </entry>
    <entry name="synth.risset_bell~" descr="Jean Claude Risset's bell synth" ref_view="object">
      <xi:include href="synth.risset_bell~.pddoc" parse="xml"/>
    </entry>
    <entry name="synth.risset_tone~" descr="Jean Claude Risset's endless glissando" ref_view="object">
      <xi:include href="synth.risset_tone~.pddoc" parse="xml"/>
    </entry>
    <entry name="synth.russian_bell~" descr="russian church bell modal model" ref_view="object">
      <xi:include href="synth.russian_bell~.pddoc" parse="xml"/>
    </entry>
    <entry name="synth.shakers~" descr="various percussion sounds from STK library" ref_view="object">
      <xi:include href="synth.shakers~.pddoc" parse="xml"/>
    </entry>
    <entry name="synth.sitar~" descr="STK sitar" ref_view="object">
      <xi:include href="synth.sitar~.pddoc" parse="xml"/>
    </entry>
    <entry name="synth.snare~" descr="Snare drum synth from Guitarix project" ref_view="object">
      <xi:include href="synth.snare~.pddoc" parse="xml"/>
    </entry>
    <entry name="synth.standard_bell~" descr="german church bell modal model" ref_view="object">
      <xi:include href="synth.standard_bell~.pddoc" parse="xml"/>
    </entry>
    <entry name="synth.tube_bell~" descr="STK tubular bell (orchestral chime) FM synthesis instrument" ref_view="object">
      <xi:include href="synth.tube_bell~.pddoc" parse="xml"/>
    </entry>
    <entry name="synth.voice_fofc~" descr="Simple formant/vocal synthesizer with FOF-cycle filterbank." ref_view="object">
      <xi:include href="synth.voice_fofc~.pddoc" parse="xml"/>
    </entry>
    <entry name="synth.voice_fofs~" descr="Simple formant/vocal synthesizer with FOF-smooth filterbank." ref_view="object">
      <xi:include href="synth.voice_fofs~.pddoc" parse="xml"/>
    </entry>
    <entry name="synth.wurley~" descr="Wurlitzer electric piano FM synthesis instrument" ref_view="object">
      <xi:include href="synth.wurley~.pddoc" parse="xml"/>
    </entry>
  </category>
  <category name="system">
    <entry name="system.colorpanel" descr="System color panel dialog popup" ref_view="object">
      <xi:include href="system.colorpanel.pddoc" parse="xml"/>
    </entry>
    <entry name="system.command" descr="run commands with pipes on Unix and Windows" ref_view="object">
      <xi:include href="system.command.pddoc" parse="xml"/>
    </entry>
    <entry name="system.cursor" descr="Output cursor motion, mousewheel and button clicks" ref_view="object">
      <xi:include href="system.cursor.pddoc" parse="xml"/>
    </entry>
    <entry name="system.exec" descr="run external command in separate process" ref_view="object">
      <xi:include href="system.exec.pddoc" parse="xml"/>
    </entry>
    <entry name="system.exit" descr="quit PureData" ref_view="object">
      <xi:include href="system.exit.pddoc" parse="xml"/>
    </entry>
    <entry name="system.getenv" descr="Get system environment variables" ref_view="object">
      <xi:include href="system.getenv.pddoc" parse="xml"/>
    </entry>
    <entry name="system.hostname" descr="outputs system hostname" ref_view="object">
      <xi:include href="system.hostname.pddoc" parse="xml"/>
    </entry>
    <entry name="system.info" descr="retrieve system information" ref_view="object">
      <xi:include href="system.info.pddoc" parse="xml"/>
    </entry>
    <entry name="system.memsize" descr="returns the size of physical memory (RAM) in bytes round to float data type." ref_view="object">
      <xi:include href="system.memsize.pddoc" parse="xml"/>
    </entry>
    <entry name="system.memused" descr="returns the process physical memory use - current and peak" ref_view="object">
      <xi:include href="system.memused.pddoc" parse="xml"/>
    </entry>
    <entry name="system.screen_size" descr="returns current screen size in pixels" ref_view="object">
      <xi:include href="system.screen_size.pddoc" parse="xml"/>
    </entry>
  </category>
  <category name="tl">
    <entry name="tl.bang" descr="Timeline bang (with possible delay)" ref_view="object">
      <xi:include href="tl.bang.pddoc" parse="xml"/>
    </entry>
    <entry name="tl.cue" descr="Timeline section" ref_view="link">
      <xi:include href="tl.cue.pddoc" parse="xml"/>
    </entry>
    <entry name="tl.timeline" descr="Timeline - event scheduler" ref_view="object">
      <xi:include href="tl.timeline.pddoc" parse="xml"/>
    </entry>
    <entry name="tl.toggle" descr="Timeline bang" ref_view="object">
      <xi:include href="tl.toggle.pddoc" parse="xml"/>
    </entry>
    <entry name="tl.transport" descr="Timeline transport control" ref_view="object">
      <xi:include href="tl.transport.pddoc" parse="xml"/>
    </entry>
  </category>
  <category name="ui">
    <entry name="ui.aview" descr="array view with cursor and selection" ref_view="link">
      <xi:include href="ui.aview.pddoc" parse="xml"/>
    </entry>
    <entry name="ui.bang" descr="A bang... that's all" ref_view="link">
      <xi:include href="ui.bang.pddoc" parse="xml"/>
    </entry>
    <entry name="ui.button" descr="button widget" ref_view="link">
      <xi:include href="ui.button.pddoc" parse="xml"/>
    </entry>
    <entry name="ui.canvas" descr="UI canvas for drawing" ref_view="link">
      <xi:include href="ui.canvas.pddoc" parse="xml"/>
    </entry>
    <entry name="ui.cmeter~" descr="Multichannel circular peak and rms signal meter" ref_view="link">
      <xi:include href="ui.cmeter~.pddoc" parse="xml"/>
    </entry>
    <entry name="ui.colorpanel" descr="colorchooser widget" ref_view="link">
      <xi:include href="ui.colorpanel.pddoc" parse="xml"/>
    </entry>
    <entry name="ui.display" descr="Display GUI object" ref_view="link">
      <xi:include href="ui.display.pddoc" parse="xml"/>
    </entry>
    <entry name="ui.dsp~" descr="GUI for turning DSP on/off" ref_view="link">
      <xi:include href="ui.dsp~.pddoc" parse="xml"/>
    </entry>
    <entry name="ui.env" descr="envelope editor widget" ref_view="link">
      <xi:include href="ui.env.pddoc" parse="xml"/>
    </entry>
    <entry name="ui.filter" descr="UI filter object calculator for biquad filter" ref_view="link">
      <xi:include href="ui.filter.pddoc" parse="xml"/>
    </entry>
    <entry name="ui.filter~" descr="UI filter object based on biquad filter" ref_view="link">
      <xi:include href="ui.filter~.pddoc" parse="xml"/>
    </entry>
    <entry name="ui.gain2~" descr="UI stereo gain control" ref_view="link">
      <xi:include href="ui.gain2~.pddoc" parse="xml"/>
    </entry>
    <entry name="ui.gain~" descr="UI gain control" ref_view="link">
      <xi:include href="ui.gain~.pddoc" parse="xml"/>
    </entry>
    <entry name="ui.icon" descr="simple icon with button capabilities" ref_view="link">
      <xi:include href="ui.icon.pddoc" parse="xml"/>
    </entry>
    <entry name="ui.incdec" descr="value increment/decrement" ref_view="link">
      <xi:include href="ui.incdec.pddoc" parse="xml"/>
    </entry>
    <entry name="ui.keyboard" descr="keyboard widget" ref_view="link">
      <xi:include href="ui.keyboard.pddoc" parse="xml"/>
    </entry>
    <entry name="ui.knob" descr="knob widget" ref_view="link">
      <xi:include href="ui.knob.pddoc" parse="xml"/>
    </entry>
    <entry name="ui.label" descr="simple label widget" ref_view="link">
      <xi:include href="ui.label.pddoc" parse="xml"/>
    </entry>
    <entry name="ui.lcd" descr="black and white bitmap display" ref_view="link">
      <xi:include href="ui.lcd.pddoc" parse="xml"/>
    </entry>
    <entry name="ui.link" descr="Hyperlink widget" ref_view="link">
      <xi:include href="ui.link.pddoc" parse="xml"/>
    </entry>
    <entry name="ui.matrix" descr="The matrix of toggles has you." ref_view="link">
      <xi:include href="ui.matrix.pddoc" parse="xml"/>
    </entry>
    <entry name="ui.menu" descr="Dropdown menu" ref_view="link">
      <xi:include href="ui.menu.pddoc" parse="xml"/>
    </entry>
    <entry name="ui.meter~" descr="Shows peak and rms signal level" ref_view="link">
      <xi:include href="ui.meter~.pddoc" parse="xml"/>
    </entry>
    <entry name="ui.midi" descr="incoming MIDI message viewport" ref_view="link">
      <xi:include href="ui.midi.pddoc" parse="xml"/>
    </entry>
    <entry name="ui.mouse_filter" descr="filter mouse events from ui objects" ref_view="link">
      <xi:include href="ui.mouse_filter.pddoc" parse="xml"/>
    </entry>
    <entry name="ui.mouse_route" descr="routes mouse events from ui objects" ref_view="link">
      <xi:include href="ui.mouse_route.pddoc" parse="xml"/>
    </entry>
    <entry name="ui.number" descr="counterpart of the vanilla [nbx]" ref_view="link">
      <xi:include href="ui.number.pddoc" parse="xml"/>
    </entry>
    <entry name="ui.number~" descr="counterpart of the vanilla [nbx] for signal" ref_view="link">
      <xi:include href="ui.number~.pddoc" parse="xml"/>
    </entry>
    <entry name="ui.plot~" descr="signal plotter" ref_view="link">
      <xi:include href="ui.plot~.pddoc" parse="xml"/>
    </entry>
    <entry name="ui.polar" descr="2D slider in polar coordinates" ref_view="link">
      <xi:include href="ui.polar.pddoc" parse="xml"/>
    </entry>
    <entry name="ui.preset" descr="Preset manager" ref_view="link">
      <xi:include href="ui.preset.pddoc" parse="xml"/>
    </entry>
    <entry name="ui.radio" descr="counterpart of the vanilla radio toggle" ref_view="link">
      <xi:include href="ui.radio.pddoc" parse="xml"/>
    </entry>
    <entry name="ui.rslider" descr="range slider" ref_view="link">
      <xi:include href="ui.rslider.pddoc" parse="xml"/>
    </entry>
    <entry name="ui.scope~" descr="Scope GUI object" ref_view="link">
      <xi:include href="ui.scope~.pddoc" parse="xml"/>
    </entry>
    <entry name="ui.slider" descr="counterpart of the vanilla slider" ref_view="link">
      <xi:include href="ui.slider.pddoc" parse="xml"/>
    </entry>
    <entry name="ui.slider2d" descr="2D slider widget" ref_view="link">
      <xi:include href="ui.slider2d.pddoc" parse="xml"/>
    </entry>
    <entry name="ui.sliders" descr="Multiple slider widget" ref_view="link">
      <xi:include href="ui.sliders.pddoc" parse="xml"/>
    </entry>
    <entry name="ui.spectroscope~" descr="Spectroscope GUI object" ref_view="link">
      <xi:include href="ui.spectroscope~.pddoc" parse="xml"/>
    </entry>
    <entry name="ui.tab" descr="displays a list of text buttons or text toggles" ref_view="link">
      <xi:include href="ui.tab.pddoc" parse="xml"/>
    </entry>
    <entry name="ui.toggle" descr="modern toggle widget" ref_view="link">
      <xi:include href="ui.toggle.pddoc" parse="xml"/>
    </entry>
  </category>
  <meta>
    <version>0.9.7</version>
    <authors>
      <author>Albert Graef</author>
      <author>Alex Nadzharov</author>
      <author>André Sier</author>
      <author>Eliott Paris</author>
      <author>Hans-Christoph Steiner</author>
      <author>Julian Parker</author>
      <author>Katja Vetter</author>
      <author>Mayank Sanganeria</author>
      <author>Mikhail Malt</author>
      <author>Oliver Larkin</author>
      <author>Olli Parviainen</author>
      <author>Paul Bourke</author>
      <author>Pierre Cochard</author>
      <author>Pierre Guillot</author>
      <author>Richard Dudas</author>
      <author>Romain Michon</author>
      <author>Serge Poltavsky</author>
      <author>Thomas Le Meur</author>
      <author>Till Bovermann</author>
      <author>Viacheslav Lotsmanov</author>
      <author>Yann Orlarey</author>
      <author>naivesound</author>
      <author>thedrgreenthumb</author>
    </authors>
    <xi:include href="ceammc_meta.xml" parse="xml"/>
  </meta>
</library>
