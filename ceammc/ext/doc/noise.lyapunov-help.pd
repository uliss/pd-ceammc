#N canvas 0 0 785 555 12;
#X declare -lib ceammc;
#X obj 583 50 cnv 1 182 23 empty empty empty 17 7 0 10 -245760 -1 0;
#X text 583 50 Part of a-chaos library;
#X obj 1 1 cnv 5 765 40 empty empty noise.lyapunov 20 20 0 20 -104026
-4096 0;
#X obj 639 11 noise.lyapunov;
#X obj 210 80 cnv 1 555 435 empty empty empty 17 7 0 10 -257983 -1 0;
#X text 215 80 inspired by Paul Bourke \, implementation by André Sier;
#X text 215 105 ---;
#X text 215 130 lyapunov random attractors;
#X text 215 155 ---;
#X text 215 180 Paul Bourke's words http://astronomy.swin.edu.au/%7Epbourke/fractals/lyapunov/;
#X text 215 220 ---;
#X text 215 245 On average 98% of the random selections of (an \, bn)
result in an infinite series.;
#X text 215 285 This is so common because of the range (-2 <= a \,
b <= 2) for each of the parameters a and b \, the number of infinite
cases will reduce greatly with a smaller range.;
#X text 215 340 About 1% were point attractors \, and about 0.5% were
periodic basins of attraction.;
#X text 215 380 ===;
#X text 215 405 xn+1 = a0 + a1 xn + a2 xn2 + a3 xn yn + a4 yn + a5
yn2;
#X text 215 430 yn+1 = b0 + b1 xn + b2 xn2 + b3 xn yn + b4 yn + b5
yn2;
#X text 215 455 ===;
#X text 215 480 see references in object's source code;
#X obj 50 558 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0 1;
#X obj 50 587 metro 50;
#X obj 69 630 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0 1;
#X floatatom 184 630 5 0 0 0 - - -;
#X msg 69 659 om \$1;
#X msg 184 659 set \$1;
#X msg 318 659 reset;
#X floatatom 59 687 5 0 0 0 - - -;
#X floatatom 194 687 5 0 0 0 - - -;
#X msg 59 716 x \$1;
#X msg 194 716 y \$1;
#X floatatom 88 745 5 0 0 0 - - -;
#X floatatom 184 745 5 0 0 0 - - -;
#X msg 88 774 a \$1;
#X msg 184 774 b \$1;
#X obj 50 803 noise.lyapunov;
#X obj 50 831 ui.display;
#X obj 20 865 cnv 1 745 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 870 cnv 5 90 26 empty empty arguments: 4 10 0 14 -262144
-49933 0;
#X text 110 905 1\.;
#X text 150 905 float;
#X obj 246 906 cnv 1 40 20 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 245 905 ARG0: a value (optional).;
#X text 110 925 2\.;
#X text 150 925 float;
#X obj 246 926 cnv 1 40 20 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 245 925 ARG1: b value (optional).;
#X text 110 945 3\.;
#X text 150 945 float;
#X obj 246 946 cnv 1 40 20 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 245 945 ARG2: x value (optional).;
#X text 110 965 4\.;
#X text 150 965 float;
#X obj 246 966 cnv 1 40 20 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 245 965 ARG3: y value (optional).;
#X obj 20 995 cnv 1 745 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 1000 cnv 5 73 26 empty empty methods: 4 10 0 14 -262144
-49933 0;
#X msg 110 1035 a;
#X text 245 1035 Arguments are:;
#X obj 255 1058 cnv 1 15 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1058 A: a value. Type: float.;
#X msg 110 1083 b;
#X text 245 1083 Arguments are:;
#X obj 255 1106 cnv 1 14 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1106 B: b value. Type: float.;
#X msg 110 1131 om;
#X text 245 1131 Arguments are:;
#X obj 255 1154 cnv 1 21 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1154 OM: enables output when cut or fold value is changed.
Type: int.;
#X msg 110 1194 reset;
#X text 245 1194 reset state.;
#X msg 110 1221 set;
#X text 245 1221 Arguments are:;
#X obj 255 1244 cnv 1 29 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1244 SET: set to value. Type: float.;
#X msg 110 1269 x;
#X text 245 1269 Arguments are:;
#X obj 255 1292 cnv 1 23 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1292 NX: x value. Type: float.;
#X msg 110 1317 y;
#X text 245 1317 Arguments are:;
#X obj 255 1340 cnv 1 22 23 empty empty empty 17 7 0 10 -245695 -1 0;
#X text 255 1340 NY: y value. Type: float.;
#X obj 20 1375 cnv 1 745 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 1380 cnv 5 64 26 empty empty inlets: 4 10 0 14 -262144
-49933 0;
#X text 110 1381 1\.;
#X text 150 1381 *bang*;
#X text 245 1381 output value.;
#X obj 20 1411 cnv 1 745 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X obj 20 1416 cnv 5 73 26 empty empty outlets: 4 10 0 14 -262144
-49933 0;
#X text 110 1417 1\.;
#X text 245 1417 main outlet.;
#X obj 10 48 ui.link @title index @url ../index-help.pd;
#X text 51 45 ::;
#X obj 67 48 ui.link @title ceammc @url ceammc-help.pd;
#X text 115 45 ::;
#X obj 131 48 ui.link @title noise @url ceammc.noise-help.pd;
#X obj 1 1467 cnv 5 765 48 empty empty empty 17 7 0 10 -203890 -1 0;
#X text 10 1470 library: ceammc v0.0;
#N canvas 10 1489 400 290 info 0;
#X obj 1 1 cnv 1 107 287 empty empty empty 17 7 0 10 -183085 -1 0;
#X text 10 10 library:;
#X text 120 10 ceammc;
#X text 10 32 version:;
#X text 120 32 0.0;
#X text 10 54 object:;
#X text 120 54 noise.lyapunov;
#X text 10 76 category:;
#X text 120 76 noise;
#X text 10 98 since:;
#X text 120 98 .5;
#X text 10 120 authors:;
#X text 120 120 André Sier;
#X text 10 142 license:;
#X text 120 142 %;
#X text 10 164 keywords:;
#X text 120 164 noise;
#X obj 120 186 declare -lib ceammc;
#X obj 120 268 cnv 1 270 1 empty empty empty 17 7 0 10 -203890 -1 0;
#X text 120 268 generated by pddoc;
#X restore 10 1489 pd info;
#X connect 19 0 20 0;
#X connect 21 0 23 0;
#X connect 22 0 24 0;
#X connect 26 0 28 0;
#X connect 27 0 29 0;
#X connect 30 0 32 0;
#X connect 31 0 33 0;
#X connect 34 0 35 0;
#X connect 28 0 34 0;
#X connect 29 0 34 0;
#X connect 32 0 34 0;
#X connect 33 0 34 0;
#X connect 23 0 34 0;
#X connect 24 0 34 0;
#X connect 25 0 34 0;
#X connect 20 0 34 0;