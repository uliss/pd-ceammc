include(faust)
include(ceammc_pd.cmake)

# main static library
add_library(ceammc_static STATIC ceammc.c ceammc.cpp)
set_target_properties(ceammc_static PROPERTIES
    COMPILE_FLAGS ${PD_EXTERNAL_CFLAGS})

# timeline shared library
add_library(timeline SHARED tl_lib.cpp)
set_target_properties(timeline PROPERTIES
    COMPILE_FLAGS "-std=c++0x")

add_custom_target(ceammc_generate_math
    COMMAND ${CMAKE_SOURCE_DIR}/ceammc/py/generate_math.py
    WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR})


###############################
# MATH
###############################
# begin autogenerated
ceammc_c_extension(math abs)
ceammc_c_extension(math acos)
ceammc_c_extension(math acosh)
ceammc_c_extension(math asin)
ceammc_c_extension(math asinh)
ceammc_c_extension(math atan)
ceammc_c_extension(math atanh)
ceammc_c_extension(math cbrt)
ceammc_c_extension(math ceil)
ceammc_c_extension(math cos)
ceammc_c_extension(math cosh)
ceammc_c_extension(math exp)
ceammc_c_extension(math exp2)
ceammc_c_extension(math floor)
ceammc_c_extension(math log)
ceammc_c_extension(math log10)
ceammc_c_extension(math log2)
ceammc_c_extension(math round)
ceammc_c_extension(math sin)
ceammc_c_extension(math sinh)
ceammc_c_extension(math sqrt)
ceammc_c_extension(math tan)
ceammc_c_extension(math tanh)
ceammc_c_extension(math trunc)
# end autogenerated
ceammc_c_extension(math pi)
ceammc_c_extension(math e)
ceammc_c_extension(math nan)
ceammc_c_extension(math inf)
ceammc_c_extension(math reciprocal)
ceammc_c_extension(math sign)
ceammc_c_extension(math neg)
ceammc_c_extension(math squared)

###############################
# DATA
###############################
ceammc_cxx_extension(data fifo)

###############################
# LIST
###############################
ceammc_cxx_extension(list at)
ceammc_cxx_extension(list apply_to)
ceammc_cxx_extension(list count)
ceammc_c_extension(list length)
ceammc_cxx_extension(list each)
ceammc_cxx_extension(list equal)
ceammc_cxx_extension(list last)
ceammc_cxx_extension(list max)
ceammc_cxx_extension(list mean)
ceammc_cxx_extension(list min)
ceammc_cxx_extension(list minmax)
ceammc_cxx_extension(list normalize)
ceammc_c_extension(list product)
ceammc_cxx_extension(list repeat)
ceammc_cxx_extension(list reverse)
ceammc_cxx_extension(list rotate)
ceammc_cxx_extension(list seq)
ceammc_cxx_extension(list shuffle)
ceammc_cxx_extension(list sort)
ceammc_c_extension(list sum)
ceammc_cxx_extension(list unique)
ceammc_cxx_extension(list pack)
ceammc_c_extension(list unpack)
ceammc_cxx_extension(list gen)
ceammc_cxx_extension(list zip)

ceammc_cxx_extension(list change)
ceammc_cxx_extension(list delta)
ceammc_cxx_extension(list integrator)
ceammc_cxx_extension(list stretch)
ceammc_cxx_extension(list shift)

ceammc_cxx_extension(list unwrap)
ceammc_cxx_extension(list wrap)

ceammc_cxx_extension(vector length)
ceammc_cxx_extension(vector normalize)
ceammc_cxx_extension(vector distance)
ceammc_cxx_extension(vector dot)


# TIMELINE

ceammc_cxx_tl_extension(tl transport)
ceammc_cxx_tl_extension(tl bang)
ceammc_cxx_tl_extension(tl cue)
ceammc_cxx_tl_extension(tl test)

# GUI

ceammc_cxx_tl_extension(ui keyboard)
ceammc_cxx_tl_extension(ui slider2d)
ceammc_cxx_tl_extension(ui sliders)
ceammc_cxx_tl_extension(ui test_cicm)

# JSON

#ceammc_cxx11_extension(json object)

ceammc_cxx_extension(exp patchdata)

# STREAM
ceammc_cxx_extension(reject if)
ceammc_cxx_extension(reject this)
ceammc_cxx_extension(pass if)
ceammc_cxx_extension(pass this)

###############################
# IS
###############################
ceammc_cxx_extension__(is even)
ceammc_cxx_extension__(is odd)
ceammc_cxx_extension__(is any)
ceammc_cxx_extension__(is bang)
ceammc_cxx_extension__(is float)
ceammc_cxx_extension__(is list)
ceammc_cxx_extension__(is symbol)
ceammc_cxx_extension__(is pointer)

###############################
# TIME
###############################
# ceammc_cxx_extension(time current)

###############################
# STRING
###############################

###############################
# PATH
###############################

include(FindLibSndFile)
if(LIBSNDFILE_FOUND)
    include_directories(${LIBSNDFILE_INCLUDE_DIRS})
#    pd_add_extension(NAME ffmpeg FILES ffmpeg.cpp
#    INTERNAL True LINK ceammc_static ${LIBSNDFILE_LIBRARIES})
endif()

# we need 1.47.0 for boost random uniform distribution
find_package(Boost 1.47.0)
if(Boost_FOUND)
    include_directories(${Boost_INCLUDE_DIRS})
    ceammc_cxx_extension(math prime)
    pd_add_extension(NAME test.data   FILES test_data.cpp   INTERNAL True LINK ceammc_static)
    pd_add_extension(NAME test.expect FILES test_expect.cpp INTERNAL True LINK ceammc_static)
    ceammc_cxx_extension(random float)
    ceammc_cxx_extension(random int)
    ceammc_cxx_extension(random gauss)

    # symbol
    ceammc_cxx_extension(symbol ends_with)
#    ceammc_cxx_extension(symbol to_upper)
endif()


find_package(GLIB)
if(GLIB_FOUND)
    include_directories(${GLIB_INCLUDE_DIRS})

    ceammc_glib_extension(path basename)
    ceammc_glib_extension(path dirname)
    ceammc_glib_extension(path exists)
    ceammc_glib_extension(path home)
    ceammc_glib_extension(path listdir)

    ceammc_glib_extension(string length)
    ceammc_glib_extension(string reverse)
    ceammc_glib_extension(string to_lower)
    ceammc_glib_extension(string to_upper)

    ceammc_glib_extension(string join)
    ceammc_glib_extension(string slice)
    ceammc_glib_extension(string compare)
    ceammc_glib_extension(string split)

    ceammc_glib_extension(system hostname)
    ceammc_glib_extension(system getenv)
    ceammc_glib_extension__(is file)
endif()

ceammc_cxx_extension(system memsize)
ceammc_cxx_extension(system memused)

###############################
# DSP
###############################
ceammc_faust_extension(lfo impulse simple_pd_control_ext)
ceammc_faust_extension(lfo tri simple_pd_control_ext)
ceammc_faust_extension(lfo square simple_pd_control_ext)

ceammc_faust_extension(fx softclip simple_pd_control_ext)
ceammc_faust_extension(fx envfollow simple_pd_control_ext)
ceammc_faust_extension(fx freqshift simple_pd_control_ext)
ceammc_faust_extension(fx pitchshift simple_pd_control_ext)

ceammc_faust_extension(flt dcblock simple_pd_control_ext)
ceammc_faust_extension(flt dcblock2 simple_pd_control_ext)
ceammc_faust_extension(flt highshelf simple_pd_control_ext)
ceammc_faust_extension(flt lowshelf simple_pd_control_ext)
ceammc_faust_extension(flt eq_peak simple_pd_control_ext)

ceammc_faust_extension(flt biquad simple_pd_control_ext)
ceammc_faust_extension(flt c_lpf simple_pd_control_ext)
ceammc_faust_extension(flt c_hpf simple_pd_control_ext)
ceammc_faust_extension(flt c_bpf simple_pd_control_ext)
ceammc_faust_extension(flt c_peak simple_pd_control_ext)
ceammc_faust_extension(flt c_lowshelf simple_pd_control_ext)
ceammc_faust_extension(flt c_highshelf simple_pd_control_ext)


ceammc_faust_extension(dyn comp simple_pd_control_ext)
ceammc_faust_extension(dyn comp2 simple_pd_control_ext)
ceammc_faust_extension(dyn gate  simple_pd_control_ext)
ceammc_faust_extension(dyn gate2 simple_pd_control_ext)
ceammc_faust_extension(dyn limit simple_pd_control_ext)
ceammc_faust_extension(dyn limit2 simple_pd_control_ext)

ceammc_faust_extension(spat pan2 simple_pd_control_ext)
ceammc_faust_extension(spat pan4 simple_pd_control_ext)

ceammc_faust_extension(osc impulse simple_pd_control_ext)
ceammc_faust_extension(osc pulse simple_pd_control_ext)
ceammc_faust_extension(osc saw simple_pd_control_ext)
ceammc_faust_extension(osc sinfb simple_pd_control_ext)
ceammc_faust_extension(osc square simple_pd_control_ext)
ceammc_faust_extension(osc tri simple_pd_control_ext)

ceammc_faust_extension(env adsr simple_pd_control_ext)

ceammc_faust_extension(env ar simple_pd_control_ext)


ceammc_faust_extension(live capture simple_pd_control_ext)
