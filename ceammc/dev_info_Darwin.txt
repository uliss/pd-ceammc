dev targets:
  * dev_ceammc        - build target `ceammc` (external binary) and install it to ./dist app folder
  * dev_ext           - build target `ceammc_lib` (external archive) and install it to ~/Documents/Pd/externals
  * dev_rmext         - remove external installed by previous command
  * dev_pddoc         - build target `ceammc_pddoc` (rebuild pddoc) and install it to ./dist app folder
  * dev_run           - build target `dev_ceammc` then run via command line app in './dist' folder
  * dev_run1          - build target `dev_ceammc` then run with debug '-d 1' (tcl->pd debug)
  * dev_run2          - build target `dev_ceammc` then run with debug '-d 2' (pd->tcl debug)
  * dev_run3          - build target `dev_ceammc` then run with debug '-d 3' (tcl<->pd debug)
  * dev_open          - build target `dev_ceammc` then open app bundle in './dist' folder
  * dev_lldb          - build target `dev_ceammc` then run in lldb debugger app in './dist' folder
  * dev_check_bundle  - check app bundle for external references
  * dev_check_lib     - check library for external references
  * dev_touch_version - touch external info file, to update compilation date/time in load message
  * dev_build_all     - build targets: `ceammc_lib`, `app`, `app-zip` and `dmg`
  * dev_faust         - list all faust targets
  * dev_tcl           - copy tcl files to ./dist app folder
  * dev_pd            - copy pd executable to ./dist app folder
  * dev_edit_release  - edit release patch
  * dev_edit_about    - edit about patch
  * dev_graph         - generate dependencies graph

deploy target:
  * deploy_github_appzip - upload PureData zipped app to github release
  * deploy_github_dmg    - upload PureData DMG archive to github release
  * deploy_github_ext    - upload external to github release
  * deploy_github        - upload all artifacts to github release
